"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[50631],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},10510:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),s=["components"],l={},i="crash_log",c={unversionedId:"en/operations/system-tables/crash-log",id:"en/operations/system-tables/crash-log",title:"crash_log",description:"system-tablescrashlog}",source:"@site/docs/en/operations/system-tables/crash-log.md",sourceDirName:"en/operations/system-tables",slug:"/en/operations/system-tables/crash-log",permalink:"/docs/docs/en/operations/system-tables/crash-log",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"contributors",permalink:"/docs/docs/en/operations/system-tables/contributors"},next:{title:"current_roles",permalink:"/docs/docs/en/operations/system-tables/current-roles"}},p={},u=[],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"system-tables_crash_log"},"crash_log"),(0,o.kt)("p",null,"Contains information about stack traces for fatal errors. The table does not exist in the database by default, it is created only when fatal errors occur."),(0,o.kt)("p",null,"Columns:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"event_date")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/datetime"},"Datetime"),") \u2014 Date of the event."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"event_time")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/datetime"},"Datetime"),") \u2014 Time of the event."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"timestamp_ns")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Timestamp of the event with nanoseconds."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"signal")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/int-uint"},"Int32"),") \u2014 Signal number."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"thread_id")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Thread ID."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query_id")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Query ID."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"trace")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/array"},"Array"),"(",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/int-uint"},"UInt64"),")) \u2014 Stack trace at the moment of crash. Each element is a virtual memory address inside ClickHouse server process."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"trace_full")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/array"},"Array"),"(",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/string"},"String"),")) \u2014 Stack trace at the moment of crash. Each element contains a called method inside ClickHouse server process."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"version")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/string"},"String"),") \u2014 ClickHouse server version."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"revision")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/int-uint"},"UInt32"),") \u2014 ClickHouse server revision."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"build_id")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/string"},"String"),") \u2014 BuildID that is generated by compiler.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example")),(0,o.kt)("p",null,"Query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.crash_log ORDER BY event_time DESC LIMIT 1;\n")),(0,o.kt)("p",null,"Result (not full):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nevent_date:   2020-10-14\nevent_time:   2020-10-14 15:47:40\ntimestamp_ns: 1602679660271312710\nsignal:       11\nthread_id:    23624\nquery_id:     428aab7c-8f5c-44e9-9607-d16b44467e69\ntrace:        [188531193,...]\ntrace_full:   ['3. DB::(anonymous namespace)::FunctionFormatReadableTimeDelta::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> >&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) const @ 0xb3cc1f9 in /home/username/work/ClickHouse/build/programs/clickhouse',...]\nversion:      ClickHouse 20.11.1.1\nrevision:     54442\nbuild_id:\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"See also")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/operations/system-tables/trace_log"},"trace_log")," system table")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/operations/system-tables/crash-log"},"Original article")))}d.isMDXComponent=!0}}]);