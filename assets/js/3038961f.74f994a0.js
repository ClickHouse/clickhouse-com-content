"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[21022],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=i(n),m=a,_=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(_,s(s({ref:t},u),{},{components:n})):r.createElement(_,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var i=2;i<o;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},29804:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return p}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),s=["components"],c={},l="stack_trace",i={unversionedId:"en/operations/system-tables/stack_trace",id:"en/operations/system-tables/stack_trace",title:"stack_trace",description:"system-tablesstacktrace}",source:"@site/docs/en/operations/system-tables/stack_trace.md",sourceDirName:"en/operations/system-tables",slug:"/en/operations/system-tables/stack_trace",permalink:"/docs/docs/en/operations/system-tables/stack_trace",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"settings_profiles",permalink:"/docs/docs/en/operations/system-tables/settings_profiles"},next:{title:"storage_policies",permalink:"/docs/docs/en/operations/system-tables/storage_policies"}},u={},p=[],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"system-tables_stack_trace"},"stack_trace"),(0,o.kt)("p",null,"Contains stack traces of all server threads. Allows developers to introspect the server state."),(0,o.kt)("p",null,"To analyze stack frames, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"addressToLine"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"addressToLineWithInlines"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"addressToSymbol")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"demangle")," ",(0,o.kt)("a",{parentName:"p",href:"/docs/docs/en/sql-reference/functions/introspection"},"introspection functions"),"."),(0,o.kt)("p",null,"Columns:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"thread_name")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Thread name."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"thread_id")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Thread identifier."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query_id")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Query identifier that can be used to get details about a query that was running from the ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/operations/system-tables/query_log"},"query_log")," system table."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"trace")," (",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/data-types/array"},"Array(UInt64)"),") \u2014 A ",(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Stack_trace"},"stack trace")," which represents a list of physical addresses where the called methods are stored.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example")),(0,o.kt)("p",null,"Enabling introspection functions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"SET allow_introspection_functions = 1;\n")),(0,o.kt)("p",null,"Getting symbols from ClickHouse object files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"WITH arrayMap(x -> demangle(addressToSymbol(x)), trace) AS all SELECT thread_name, thread_id, query_id, arrayStringConcat(all, '\\n') AS res FROM system.stack_trace LIMIT 1 \\G;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nthread_name: clickhouse-serv\n\nthread_id: 686\nquery_id:  1a11f70b-626d-47c1-b948-f9c7b206395d\nres:       sigqueue\nDB::StorageSystemStackTrace::fillData(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::Context const&, DB::SelectQueryInfo const&) const\nDB::IStorageSystemOneBlock<DB::StorageSystemStackTrace>::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int)\nDB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPipeline&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)\nDB::InterpreterSelectQuery::executeImpl(DB::QueryPipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>)\nDB::InterpreterSelectQuery::execute()\nDB::InterpreterSelectWithUnionQuery::execute()\nDB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*)\nDB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool)\nDB::TCPHandler::runImpl()\nDB::TCPHandler::run()\nPoco::Net::TCPServerConnection::start()\nPoco::Net::TCPServerDispatcher::run()\nPoco::PooledThread::run()\nPoco::ThreadImpl::runnableEntry(void*)\nstart_thread\n__clone\n")),(0,o.kt)("p",null,"Getting filenames and line numbers in ClickHouse source code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"WITH arrayMap(x -> addressToLine(x), trace) AS all, arrayFilter(x -> x LIKE '%/dbms/%', all) AS dbms SELECT thread_name, thread_id, query_id, arrayStringConcat(notEmpty(dbms) ? dbms : all, '\\n') AS res FROM system.stack_trace LIMIT 1 \\G;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nthread_name: clickhouse-serv\n\nthread_id: 686\nquery_id:  cad353e7-1c29-4b2e-949f-93e597ab7a54\nres:       /lib/x86_64-linux-gnu/libc-2.27.so\n/build/obj-x86_64-linux-gnu/../src/Storages/System/StorageSystemStackTrace.cpp:182\n/build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:656\n/build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1338\n/build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:751\n/build/obj-x86_64-linux-gnu/../contrib/libcxx/include/optional:224\n/build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:192\n/build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:384\n/build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:643\n/build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:251\n/build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1197\n/build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:57\n/build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856\n/build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/Mutex_POSIX.h:59\n/build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/AutoPtr.h:223\n/lib/x86_64-linux-gnu/libpthread-2.27.so\n/lib/x86_64-linux-gnu/libc-2.27.so\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"See Also")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/functions/introspection"},"Introspection Functions")," \u2014 Which introspection functions are available and how to use them."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/operations/system-tables/trace_log"},"system.trace_log")," \u2014 Contains stack traces collected by the sampling query profiler."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/functions/array-functions#array-map"},"arrayMap")," \u2014 Description and usage example of the ",(0,o.kt)("inlineCode",{parentName:"li"},"arrayMap")," function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/functions/array-functions#array-filter"},"arrayFilter")," \u2014 Description and usage example of the ",(0,o.kt)("inlineCode",{parentName:"li"},"arrayFilter")," function.")))}m.isMDXComponent=!0}}]);