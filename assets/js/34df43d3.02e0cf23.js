"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[53343],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(h,a(a({ref:n},s),{},{components:t})):r.createElement(h,a({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5064:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],l={sidebar_position:67,sidebar_label:"Build on Linux for AARCH64 (ARM64)"},c="How to Build ClickHouse on Linux for AARCH64 (ARM64) Architecture",u={unversionedId:"en/development/build-cross-arm",id:"en/development/build-cross-arm",title:"How to Build ClickHouse on Linux for AARCH64 (ARM64) Architecture",description:"This is for the case when you have Linux machine and want to use it to build clickhouse binary that will run on another Linux machine with AARCH64 CPU architecture.",source:"@site/docs/en/development/build-cross-arm.md",sourceDirName:"en/development",slug:"/en/development/build-cross-arm",permalink:"/docs/en/development/build-cross-arm",tags:[],version:"current",sidebarPosition:67,frontMatter:{sidebar_position:67,sidebar_label:"Build on Linux for AARCH64 (ARM64)"},sidebar:"tutorialSidebar",previous:{title:"Build on Linux for Mac OS X",permalink:"/docs/en/development/build-cross-osx"},next:{title:"Build on Linux for RISC-V 64",permalink:"/docs/en/development/build-cross-riscv"}},s={},p=[{value:"Install Clang-13",id:"install-clang-13",level:2},{value:"Install Cross-Compilation Toolset",id:"install-cross-compilation-toolset",level:2},{value:"Build ClickHouse",id:"build-clickhouse",level:2}],d={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-build-clickhouse-on-linux-for-aarch64-arm64-architecture"},"How to Build ClickHouse on Linux for AARCH64 (ARM64) Architecture"),(0,i.kt)("p",null,"This is for the case when you have Linux machine and want to use it to build ",(0,i.kt)("inlineCode",{parentName:"p"},"clickhouse")," binary that will run on another Linux machine with AARCH64 CPU architecture.\nThis is intended for continuous integration checks that run on Linux servers."),(0,i.kt)("p",null,"The cross-build for AARCH64 is based on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/en/development/build"},"Build instructions"),", follow them first."),(0,i.kt)("h2",{id:"install-clang-13"},"Install Clang-13"),(0,i.kt)("p",null,"Follow the instructions from ",(0,i.kt)("a",{parentName:"p",href:"https://apt.llvm.org/"},"https://apt.llvm.org/")," for your Ubuntu or Debian setup or do"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"\n')),(0,i.kt)("h2",{id:"install-cross-compilation-toolset"},"Install Cross-Compilation Toolset"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ClickHouse\nmkdir -p build-aarch64/cmake/toolchain/linux-aarch64\nwget 'https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz?revision=2e88a73f-d233-4f96-b1f4-d8b36e9bb0b9&la=en' -O gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz\ntar xJf gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz -C build-aarch64/cmake/toolchain/linux-aarch64 --strip-components=1\n")),(0,i.kt)("h2",{id:"build-clickhouse"},"Build ClickHouse"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ClickHouse\nmkdir build-arm64\nCC=clang-13 CXX=clang++-13 cmake . -Bbuild-arm64 -DCMAKE_TOOLCHAIN_FILE=cmake/linux/toolchain-aarch64.cmake\nninja -C build-arm64\n")),(0,i.kt)("p",null,"The resulting binary will run only on Linux with the AARCH64 CPU architecture."))}m.isMDXComponent=!0}}]);