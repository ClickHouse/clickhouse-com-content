"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[87176],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return k}});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=i.createContext({}),c=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(t),k=a,d=m["".concat(o,".").concat(k)]||m[k]||p[k]||r;return t?i.createElement(d,l(l({ref:n},u),{},{components:t})):i.createElement(d,l({ref:n},u))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<r;c++)l[c]=t[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},48215:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var i=t(87462),a=t(63366),r=(t(67294),t(3905)),l=["components"],s={sidebar_position:61,sidebar_label:"clickhouse-benchmark"},o="clickhouse-benchmark",c={unversionedId:"en/operations/utilities/clickhouse-benchmark",id:"en/operations/utilities/clickhouse-benchmark",title:"clickhouse-benchmark",description:"Connects to a ClickHouse server and repeatedly sends specified queries.",source:"@site/docs/en/operations/utilities/clickhouse-benchmark.md",sourceDirName:"en/operations/utilities",slug:"/en/operations/utilities/clickhouse-benchmark",permalink:"/docs/staging2/docs/en/operations/utilities/clickhouse-benchmark",tags:[],version:"current",sidebarPosition:61,frontMatter:{sidebar_position:61,sidebar_label:"clickhouse-benchmark"},sidebar:"tutorialSidebar",previous:{title:"clickhouse-local",permalink:"/docs/staging2/docs/en/operations/utilities/clickhouse-local"},next:{title:"clickhouse-compressor",permalink:"/docs/staging2/docs/en/operations/utilities/clickhouse-compressor"}},u={},p=[{value:"Keys",id:"clickhouse-benchmark-keys",level:2},{value:"Output",id:"clickhouse-benchmark-output",level:2},{value:"Comparison Mode",id:"clickhouse-benchmark-comparison-mode",level:2},{value:"Example",id:"clickhouse-benchmark-example",level:2}],m={toc:p};function k(e){var n=e.components,t=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"clickhouse-benchmark"},"clickhouse-benchmark"),(0,r.kt)("p",null,"Connects to a ClickHouse server and repeatedly sends specified queries."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ clickhouse-benchmark --query ["single query"] [keys]\n')),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ echo "single query" | clickhouse-benchmark [keys]\n')),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ clickhouse-benchmark [keys] <<< "single query"\n')),(0,r.kt)("p",null,"If you want to send a set of queries, create a text file and place each query on the individual string in this file. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.numbers LIMIT 10000000;\nSELECT 1;\n")),(0,r.kt)("p",null,"Then pass this file to a standard input of ",(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse-benchmark"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"clickhouse-benchmark [keys] < queries_file;\n")),(0,r.kt)("h2",{id:"clickhouse-benchmark-keys"},"Keys"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--query=QUERY")," \u2014 Query to execute. If this parameter is not passed, ",(0,r.kt)("inlineCode",{parentName:"li"},"clickhouse-benchmark")," will read queries from standard input."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-c N"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--concurrency=N")," \u2014 Number of queries that ",(0,r.kt)("inlineCode",{parentName:"li"},"clickhouse-benchmark")," sends simultaneously. Default value: 1."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-d N"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--delay=N")," \u2014 Interval in seconds between intermediate reports (to disable reports set 0). Default value: 1."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-h HOST"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--host=HOST")," \u2014 Server host. Default value: ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost"),". For the ",(0,r.kt)("a",{parentName:"li",href:"#clickhouse-benchmark-comparison-mode"},"comparison mode")," you can use multiple ",(0,r.kt)("inlineCode",{parentName:"li"},"-h")," keys."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-p N"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--port=N")," \u2014 Server port. Default value: 9000. For the ",(0,r.kt)("a",{parentName:"li",href:"#clickhouse-benchmark-comparison-mode"},"comparison mode")," you can use multiple ",(0,r.kt)("inlineCode",{parentName:"li"},"-p")," keys."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-i N"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--iterations=N")," \u2014 Total number of queries. Default value: 0 (repeat forever)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-r"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--randomize")," \u2014 Random order of queries execution if there is more than one input query."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-s"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--secure")," \u2014 Using ",(0,r.kt)("inlineCode",{parentName:"li"},"TLS")," connection."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-t N"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--timelimit=N")," \u2014 Time limit in seconds. ",(0,r.kt)("inlineCode",{parentName:"li"},"clickhouse-benchmark")," stops sending queries when the specified time limit is reached. Default value: 0 (time limit disabled)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--confidence=N")," \u2014 Level of confidence for T-test. Possible values: 0 (80%), 1 (90%), 2 (95%), 3 (98%), 4 (99%), 5 (99.5%). Default value: 5. In the ",(0,r.kt)("a",{parentName:"li",href:"#clickhouse-benchmark-comparison-mode"},"comparison mode")," ",(0,r.kt)("inlineCode",{parentName:"li"},"clickhouse-benchmark")," performs the ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Student%27s_t-test#Independent_two-sample_t-test"},"Independent two-sample Student\u2019s t-test")," to determine whether the two distributions aren\u2019t different with the selected level of confidence."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--cumulative")," \u2014 Printing cumulative data instead of data per interval."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--database=DATABASE_NAME")," \u2014 ClickHouse database name. Default value: ",(0,r.kt)("inlineCode",{parentName:"li"},"default"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--json=FILEPATH")," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"JSON")," output. When the key is set, ",(0,r.kt)("inlineCode",{parentName:"li"},"clickhouse-benchmark")," outputs a report to the specified JSON-file."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--user=USERNAME")," \u2014 ClickHouse user name. Default value: ",(0,r.kt)("inlineCode",{parentName:"li"},"default"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--password=PSWD")," \u2014 ClickHouse user password. Default value: empty string."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--stacktrace")," \u2014 Stack traces output. When the key is set, ",(0,r.kt)("inlineCode",{parentName:"li"},"clickhouse-bencmark")," outputs stack traces of exceptions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--stage=WORD")," \u2014 Query processing stage at server. ClickHouse stops query processing and returns an answer to ",(0,r.kt)("inlineCode",{parentName:"li"},"clickhouse-benchmark")," at the specified stage. Possible values: ",(0,r.kt)("inlineCode",{parentName:"li"},"complete"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"fetch_columns"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"with_mergeable_state"),". Default value: ",(0,r.kt)("inlineCode",{parentName:"li"},"complete"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--help")," \u2014 Shows the help message.")),(0,r.kt)("p",null,"If you want to apply some ",(0,r.kt)("a",{parentName:"p",href:"/docs/staging2/docs/en/operations/settings/index"},"settings")," for queries, pass them as a key ",(0,r.kt)("inlineCode",{parentName:"p"},"--<session setting name>= SETTING_VALUE"),". For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"--max_memory_usage=1048576"),"."),(0,r.kt)("h2",{id:"clickhouse-benchmark-output"},"Output"),(0,r.kt)("p",null,"By default, ",(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse-benchmark")," reports for each ",(0,r.kt)("inlineCode",{parentName:"p"},"--delay")," interval."),(0,r.kt)("p",null,"Example of the report:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Queries executed: 10.\n\nlocalhost:9000, queries 10, QPS: 6.772, RPS: 67904487.440, MiB/s: 518.070, result RPS: 67721584.984, result MiB/s: 516.675.\n\n0.000%      0.145 sec.\n10.000%     0.146 sec.\n20.000%     0.146 sec.\n30.000%     0.146 sec.\n40.000%     0.147 sec.\n50.000%     0.148 sec.\n60.000%     0.148 sec.\n70.000%     0.148 sec.\n80.000%     0.149 sec.\n90.000%     0.150 sec.\n95.000%     0.150 sec.\n99.000%     0.150 sec.\n99.900%     0.150 sec.\n99.990%     0.150 sec.\n")),(0,r.kt)("p",null,"In the report you can find:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Number of queries in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Queries executed:")," field.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Status string containing (in order):"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Endpoint of ClickHouse server."),(0,r.kt)("li",{parentName:"ul"},"Number of processed queries."),(0,r.kt)("li",{parentName:"ul"},"QPS: How many queries the server performed per second during a period specified in the ",(0,r.kt)("inlineCode",{parentName:"li"},"--delay")," argument."),(0,r.kt)("li",{parentName:"ul"},"RPS: How many rows the server reads per second during a period specified in the ",(0,r.kt)("inlineCode",{parentName:"li"},"--delay")," argument."),(0,r.kt)("li",{parentName:"ul"},"MiB/s: How many mebibytes the server reads per second during a period specified in the ",(0,r.kt)("inlineCode",{parentName:"li"},"--delay")," argument."),(0,r.kt)("li",{parentName:"ul"},"result RPS: How many rows placed by the server to the result of a query per second during a period specified in the ",(0,r.kt)("inlineCode",{parentName:"li"},"--delay")," argument."),(0,r.kt)("li",{parentName:"ul"},"result MiB/s. How many mebibytes placed by the server to the result of a query per second during a period specified in the ",(0,r.kt)("inlineCode",{parentName:"li"},"--delay")," argument."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Percentiles of queries execution time."))),(0,r.kt)("h2",{id:"clickhouse-benchmark-comparison-mode"},"Comparison Mode"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse-benchmark")," can compare performances for two running ClickHouse servers."),(0,r.kt)("p",null,"To use the comparison mode, specify endpoints of both servers by two pairs of ",(0,r.kt)("inlineCode",{parentName:"p"},"--host"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"--port")," keys. Keys matched together by position in arguments list, the first ",(0,r.kt)("inlineCode",{parentName:"p"},"--host")," is matched with the first ",(0,r.kt)("inlineCode",{parentName:"p"},"--port")," and so on. ",(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse-benchmark")," establishes connections to both servers, then sends queries. Each query addressed to a randomly selected server. The results are shown for each server separately."),(0,r.kt)("h2",{id:"clickhouse-benchmark-example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ echo "SELECT * FROM system.numbers LIMIT 10000000 OFFSET 10000000" | clickhouse-benchmark -i 10\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Loaded 1 queries.\n\nQueries executed: 6.\n\nlocalhost:9000, queries 6, QPS: 6.153, RPS: 123398340.957, MiB/s: 941.455, result RPS: 61532982.200, result MiB/s: 469.459.\n\n0.000%      0.159 sec.\n10.000%     0.159 sec.\n20.000%     0.159 sec.\n30.000%     0.160 sec.\n40.000%     0.160 sec.\n50.000%     0.162 sec.\n60.000%     0.164 sec.\n70.000%     0.165 sec.\n80.000%     0.166 sec.\n90.000%     0.166 sec.\n95.000%     0.167 sec.\n99.000%     0.167 sec.\n99.900%     0.167 sec.\n99.990%     0.167 sec.\n\n\n\nQueries executed: 10.\n\nlocalhost:9000, queries 10, QPS: 6.082, RPS: 121959604.568, MiB/s: 930.478, result RPS: 60815551.642, result MiB/s: 463.986.\n\n0.000%      0.159 sec.\n10.000%     0.159 sec.\n20.000%     0.160 sec.\n30.000%     0.163 sec.\n40.000%     0.164 sec.\n50.000%     0.165 sec.\n60.000%     0.166 sec.\n70.000%     0.166 sec.\n80.000%     0.167 sec.\n90.000%     0.167 sec.\n95.000%     0.170 sec.\n99.000%     0.172 sec.\n99.900%     0.172 sec.\n99.990%     0.172 sec.\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/operations/utilities/clickhouse-benchmark.md"},"Original article")," "))}k.isMDXComponent=!0}}]);