"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[46243],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return k}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(a),k=r,c=u["".concat(d,".").concat(k)]||u[k]||m[k]||l;return a?n.createElement(c,i(i({ref:t},s),{},{components:a})):n.createElement(c,i({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},82393:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),i=["components"],o={sidebar_position:39,sidebar_label:"Dates and Times"},d="Functions for Working with Dates and Times",p={unversionedId:"en/sql-reference/functions/date-time-functions",id:"en/sql-reference/functions/date-time-functions",title:"Functions for Working with Dates and Times",description:"functions-for-working-with-dates-and-times}",source:"@site/docs/en/sql-reference/functions/date-time-functions.md",sourceDirName:"en/sql-reference/functions",slug:"/en/sql-reference/functions/date-time-functions",permalink:"/docs/staging4/docs/en/sql-reference/functions/date-time-functions",tags:[],version:"current",sidebarPosition:39,frontMatter:{sidebar_position:39,sidebar_label:"Dates and Times"},sidebar:"tutorialSidebar",previous:{title:"Type Conversion",permalink:"/docs/staging4/docs/en/sql-reference/functions/type-conversion-functions"},next:{title:"Strings",permalink:"/docs/staging4/docs/en/sql-reference/functions/string-functions"}},s={},m=[{value:"timeZone",id:"timezone",level:2},{value:"toTimeZone",id:"totimezone",level:2},{value:"timeZoneOf",id:"timezoneof",level:2},{value:"timeZoneOffset",id:"timezoneoffset",level:2},{value:"toYear",id:"toyear",level:2},{value:"toQuarter",id:"toquarter",level:2},{value:"toMonth",id:"tomonth",level:2},{value:"toDayOfYear",id:"todayofyear",level:2},{value:"toDayOfMonth",id:"todayofmonth",level:2},{value:"toDayOfWeek",id:"todayofweek",level:2},{value:"toHour",id:"tohour",level:2},{value:"toMinute",id:"tominute",level:2},{value:"toSecond",id:"tosecond",level:2},{value:"toUnixTimestamp",id:"to-unix-timestamp",level:2},{value:"toStartOfYear",id:"tostartofyear",level:2},{value:"toStartOfISOYear",id:"tostartofisoyear",level:2},{value:"toStartOfQuarter",id:"tostartofquarter",level:2},{value:"toStartOfMonth",id:"tostartofmonth",level:2},{value:"toMonday",id:"tomonday",level:2},{value:"toStartOfWeek(t[,mode])",id:"tostartofweektmode",level:2},{value:"toStartOfDay",id:"tostartofday",level:2},{value:"toStartOfHour",id:"tostartofhour",level:2},{value:"toStartOfMinute",id:"tostartofminute",level:2},{value:"toStartOfSecond",id:"tostartofsecond",level:2},{value:"toStartOfFiveMinute",id:"tostartoffiveminute",level:2},{value:"toStartOfTenMinutes",id:"tostartoftenminutes",level:2},{value:"toStartOfFifteenMinutes",id:"tostartoffifteenminutes",level:2},{value:"toStartOfInterval(time_or_data, INTERVAL x unit [, time_zone])",id:"tostartofintervaltime-or-data-interval-x-unit-time-zone",level:2},{value:"toTime",id:"totime",level:2},{value:"toRelativeYearNum",id:"torelativeyearnum",level:2},{value:"toRelativeQuarterNum",id:"torelativequarternum",level:2},{value:"toRelativeMonthNum",id:"torelativemonthnum",level:2},{value:"toRelativeWeekNum",id:"torelativeweeknum",level:2},{value:"toRelativeDayNum",id:"torelativedaynum",level:2},{value:"toRelativeHourNum",id:"torelativehournum",level:2},{value:"toRelativeMinuteNum",id:"torelativeminutenum",level:2},{value:"toRelativeSecondNum",id:"torelativesecondnum",level:2},{value:"toISOYear",id:"toisoyear",level:2},{value:"toISOWeek",id:"toisoweek",level:2},{value:"toWeek(date[,mode])",id:"toweekdatemode",level:2},{value:"toYearWeek(date[,mode])",id:"toyearweekdatemode",level:2},{value:"date_trunc",id:"date_trunc",level:2},{value:"date_add",id:"date_add",level:2},{value:"date_diff",id:"date_diff",level:2},{value:"date_sub",id:"date_sub",level:2},{value:"timestamp_add",id:"timestamp_add",level:2},{value:"timestamp_sub",id:"timestamp_sub",level:2},{value:"now",id:"now",level:2},{value:"today",id:"today",level:2},{value:"yesterday",id:"yesterday",level:2},{value:"timeSlot",id:"timeslot",level:2},{value:"toYYYYMM",id:"toyyyymm",level:2},{value:"toYYYYMMDD",id:"toyyyymmdd",level:2},{value:"toYYYYMMDDhhmmss",id:"toyyyymmddhhmmss",level:2},{value:"addYears, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addQuarters",id:"addyears-addmonths-addweeks-adddays-addhours-addminutes-addseconds-addquarters",level:2},{value:"subtractYears, subtractMonths, subtractWeeks, subtractDays, subtractHours, subtractMinutes, subtractSeconds, subtractQuarters",id:"subtractyears-subtractmonths-subtractweeks-subtractdays-subtracthours-subtractminutes-subtractseconds-subtractquarters",level:2},{value:"timeSlots(StartTime, Duration,[, Size])",id:"timeslotsstarttime-duration-size",level:2},{value:"formatDateTime",id:"formatdatetime",level:2},{value:"dateName",id:"dataname",level:2},{value:"FROM_UNIXTIME",id:"fromunixfime",level:2},{value:"toModifiedJulianDay",id:"tomodifiedjulianday",level:2},{value:"toModifiedJulianDayOrNull",id:"tomodifiedjuliandayornull",level:2},{value:"fromModifiedJulianDay",id:"frommodifiedjulianday",level:2},{value:"fromModifiedJulianDayOrNull",id:"frommodifiedjuliandayornull",level:2}],u={toc:m};function k(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"functions-for-working-with-dates-and-times"},"Functions for Working with Dates and Times"),(0,l.kt)("p",null,"Support for time zones."),(0,l.kt)("p",null,"All functions for working with the date and time that have a logical use for the time zone can accept a second optional time zone argument. Example: Asia/Yekaterinburg. In this case, they use the specified time zone instead of the local (default) one."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    toDateTime('2016-06-15 23:00:00') AS time,\n    toDate(time) AS date_local,\n    toDate(time, 'Asia/Yekaterinburg') AS date_yekat,\n    toString(time, 'US/Samoa') AS time_samoa\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500time\u2500\u252c\u2500date_local\u2500\u252c\u2500date_yekat\u2500\u252c\u2500time_samoa\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 2016-06-15 23:00:00 \u2502 2016-06-15 \u2502 2016-06-16 \u2502 2016-06-15 09:00:00 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"timezone"},"timeZone"),(0,l.kt)("p",null,"Returns the timezone of the server.\nIf it is executed in the context of a distributed table, then it generates a normal column with values relevant to each shard. Otherwise it produces a constant value."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"timeZone()\n")),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"timezone"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Timezone.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),"."),(0,l.kt)("h2",{id:"totimezone"},"toTimeZone"),(0,l.kt)("p",null,"Converts time or date and time to the specified time zone. The time zone is an attribute of the ",(0,l.kt)("inlineCode",{parentName:"p"},"Date")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"DateTime")," data types. The internal value (number of seconds) of the table field or of the resultset's column does not change, the column's type changes and its string representation changes accordingly."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"toTimezone(value, timezone)\n")),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"toTimezone"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Time or date and time. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezone")," \u2014 Timezone for the returned value. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),". This argument is a constant, because ",(0,l.kt)("inlineCode",{parentName:"li"},"toTimezone")," changes the timezone of a column (timezone is an attribute of ",(0,l.kt)("inlineCode",{parentName:"li"},"DateTime*")," types).")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Date and time.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT toDateTime('2019-01-01 00:00:00', 'UTC') AS time_utc,\n    toTypeName(time_utc) AS type_utc,\n    toInt32(time_utc) AS int32utc,\n    toTimeZone(time_utc, 'Asia/Yekaterinburg') AS time_yekat,\n    toTypeName(time_yekat) AS type_yekat,\n    toInt32(time_yekat) AS int32yekat,\n    toTimeZone(time_utc, 'US/Samoa') AS time_samoa,\n    toTypeName(time_samoa) AS type_samoa,\n    toInt32(time_samoa) AS int32samoa\nFORMAT Vertical;\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\ntime_utc:   2019-01-01 00:00:00\ntype_utc:   DateTime('UTC')\nint32utc:   1546300800\ntime_yekat: 2019-01-01 05:00:00\ntype_yekat: DateTime('Asia/Yekaterinburg')\nint32yekat: 1546300800\ntime_samoa: 2018-12-31 13:00:00\ntype_samoa: DateTime('US/Samoa')\nint32samoa: 1546300800\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"toTimeZone(time_utc, 'Asia/Yekaterinburg')")," changes the ",(0,l.kt)("inlineCode",{parentName:"p"},"DateTime('UTC')")," type to ",(0,l.kt)("inlineCode",{parentName:"p"},"DateTime('Asia/Yekaterinburg')"),". The value (Unixtimestamp) 1546300800 stays the same, but the string representation (the result of the toString() function) changes from ",(0,l.kt)("inlineCode",{parentName:"p"},"time_utc:   2019-01-01 00:00:00")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"time_yekat: 2019-01-01 05:00:00"),"."),(0,l.kt)("h2",{id:"timezoneof"},"timeZoneOf"),(0,l.kt)("p",null,"Returns the timezone name of ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64")," data types."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"timeZoneOf(value)\n")),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"timezoneOf"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Date and time. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime")," or ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Timezone name.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT timezoneOf(now());\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500timezoneOf(now())\u2500\u2510\n\u2502 Etc/UTC           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"timezoneoffset"},"timeZoneOffset"),(0,l.kt)("p",null,"Returns a timezone offset in seconds from ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Coordinated_Universal_Time"},"UTC"),". The function takes into account ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Daylight_saving_time"},"daylight saving time")," and historical timezone changes at the specified date and time.\n",(0,l.kt)("a",{parentName:"p",href:"https://www.iana.org/time-zones"},"IANA timezone database")," is used to calculate the offset."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"timeZoneOffset(value)\n")),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"timezoneOffset"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Date and time. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime")," or ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Offset from UTC in seconds.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Int32"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT toDateTime('2021-04-21 10:20:30', 'America/New_York') AS Time, toTypeName(Time) AS Type,\n       timeZoneOffset(Time) AS Offset_in_seconds, (Offset_in_seconds / 3600) AS Offset_in_hours;\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500Time\u2500\u252c\u2500Type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500Offset_in_seconds\u2500\u252c\u2500Offset_in_hours\u2500\u2510\n\u2502 2021-04-21 10:20:30 \u2502 DateTime('America/New_York') \u2502            -14400 \u2502              -4 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"toyear"},"toYear"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt16 number containing the year number (AD)."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"YEAR"),"."),(0,l.kt)("h2",{id:"toquarter"},"toQuarter"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt8 number containing the quarter number."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"QUARTER"),"."),(0,l.kt)("h2",{id:"tomonth"},"toMonth"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt8 number containing the month number (1-12)."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"MONTH"),"."),(0,l.kt)("h2",{id:"todayofyear"},"toDayOfYear"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt16 number containing the number of the day of the year (1-366)."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"DAYOFYEAR"),"."),(0,l.kt)("h2",{id:"todayofmonth"},"toDayOfMonth"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt8 number containing the number of the day of the month (1-31)."),(0,l.kt)("p",null,"Aliases: ",(0,l.kt)("inlineCode",{parentName:"p"},"DAYOFMONTH"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"DAY"),"."),(0,l.kt)("h2",{id:"todayofweek"},"toDayOfWeek"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt8 number containing the number of the day of the week (Monday is 1, and Sunday is 7)."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"DAYOFWEEK"),"."),(0,l.kt)("h2",{id:"tohour"},"toHour"),(0,l.kt)("p",null,"Converts a date with time to a UInt8 number containing the number of the hour in 24-hour time (0-23).\nThis function assumes that if clocks are moved ahead, it is by one hour and occurs at 2 a.m., and if clocks are moved back, it is by one hour and occurs at 3 a.m. (which is not always true \u2013 even in Moscow the clocks were twice changed at a different time)."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"HOUR"),"."),(0,l.kt)("h2",{id:"tominute"},"toMinute"),(0,l.kt)("p",null,"Converts a date with time to a UInt8 number containing the number of the minute of the hour (0-59)."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"MINUTE"),"."),(0,l.kt)("h2",{id:"tosecond"},"toSecond"),(0,l.kt)("p",null,"Converts a date with time to a UInt8 number containing the number of the second in the minute (0-59).\nLeap seconds are not accounted for."),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"SECOND"),"."),(0,l.kt)("h2",{id:"to-unix-timestamp"},"toUnixTimestamp"),(0,l.kt)("p",null,"For DateTime argument: converts value to the number with type UInt32 -- Unix Timestamp (",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Unix_time"},"https://en.wikipedia.org/wiki/Unix_time"),").\nFor String argument: converts the input string to the datetime according to the timezone (optional second argument, server timezone is used by default) and returns the corresponding unix timestamp."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"toUnixTimestamp(datetime)\ntoUnixTimestamp(str, [timezone])\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns the unix timestamp.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("inlineCode",{parentName:"p"},"UInt32"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT toUnixTimestamp('2017-11-05 08:07:47', 'Asia/Tokyo') AS unix_timestamp\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500unix_timestamp\u2500\u2510\n\u2502     1509836867 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The return type ",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOf*")," functions described below is ",(0,l.kt)("inlineCode",{parentName:"p"},"Date")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"DateTime"),". Though these functions can take ",(0,l.kt)("inlineCode",{parentName:"p"},"DateTime64")," as an argument, passing them a ",(0,l.kt)("inlineCode",{parentName:"p"},"DateTime64")," that is out of the normal range (years 1925 - 2283) will give an incorrect result."))),(0,l.kt)("h2",{id:"tostartofyear"},"toStartOfYear"),(0,l.kt)("p",null,"Rounds down a date or date with time to the first day of the year.\nReturns the date."),(0,l.kt)("h2",{id:"tostartofisoyear"},"toStartOfISOYear"),(0,l.kt)("p",null,"Rounds down a date or date with time to the first day of ISO year.\nReturns the date."),(0,l.kt)("h2",{id:"tostartofquarter"},"toStartOfQuarter"),(0,l.kt)("p",null,"Rounds down a date or date with time to the first day of the quarter.\nThe first day of the quarter is either 1 January, 1 April, 1 July, or 1 October.\nReturns the date."),(0,l.kt)("h2",{id:"tostartofmonth"},"toStartOfMonth"),(0,l.kt)("p",null,"Rounds down a date or date with time to the first day of the month.\nReturns the date."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The behavior of parsing incorrect dates is implementation specific. ClickHouse may return zero date, throw an exception or do \u201cnatural\u201d overflow."))),(0,l.kt)("h2",{id:"tomonday"},"toMonday"),(0,l.kt)("p",null,"Rounds down a date or date with time to the nearest Monday.\nReturns the date."),(0,l.kt)("h2",{id:"tostartofweektmode"},"toStartOfWeek(t","[",",mode","]",")"),(0,l.kt)("p",null,"Rounds down a date or date with time to the nearest Sunday or Monday by mode.\nReturns the date.\nThe mode argument works exactly like the mode argument to toWeek(). For the single-argument syntax, a mode value of 0 is used."),(0,l.kt)("h2",{id:"tostartofday"},"toStartOfDay"),(0,l.kt)("p",null,"Rounds down a date with time to the start of the day."),(0,l.kt)("h2",{id:"tostartofhour"},"toStartOfHour"),(0,l.kt)("p",null,"Rounds down a date with time to the start of the hour."),(0,l.kt)("h2",{id:"tostartofminute"},"toStartOfMinute"),(0,l.kt)("p",null,"Rounds down a date with time to the start of the minute."),(0,l.kt)("h2",{id:"tostartofsecond"},"toStartOfSecond"),(0,l.kt)("p",null,"Truncates sub-seconds."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"toStartOfSecond(value, [timezone])\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Date and time. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezone")," \u2014 ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-timezone"},"Timezone")," for the returned value (optional). If not specified, the function uses the timezone of the ",(0,l.kt)("inlineCode",{parentName:"li"},"value")," parameter. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Input value without sub-seconds.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("p",null,"Query without timezone:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"WITH toDateTime64('2020-01-01 10:20:30.999', 3) AS dt64\nSELECT toStartOfSecond(dt64);\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500toStartOfSecond(dt64)\u2500\u2510\n\u2502 2020-01-01 10:20:30.000 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("p",null,"Query with timezone:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"WITH toDateTime64('2020-01-01 10:20:30.999', 3) AS dt64\nSELECT toStartOfSecond(dt64, 'Asia/Istanbul');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500toStartOfSecond(dt64, 'Asia/Istanbul')\u2500\u2510\n\u2502                2020-01-01 13:20:30.000 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"See also")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-timezone"},"Timezone")," server configuration parameter.")),(0,l.kt)("h2",{id:"tostartoffiveminute"},"toStartOfFiveMinute"),(0,l.kt)("p",null,"Rounds down a date with time to the start of the five-minute interval."),(0,l.kt)("h2",{id:"tostartoftenminutes"},"toStartOfTenMinutes"),(0,l.kt)("p",null,"Rounds down a date with time to the start of the ten-minute interval."),(0,l.kt)("h2",{id:"tostartoffifteenminutes"},"toStartOfFifteenMinutes"),(0,l.kt)("p",null,"Rounds down the date with time to the start of the fifteen-minute interval."),(0,l.kt)("h2",{id:"tostartofintervaltime-or-data-interval-x-unit-time-zone"},"toStartOfInterval(time_or_data, INTERVAL x unit ","[",", time_zone","]",")"),(0,l.kt)("p",null,"This is a generalization of other functions named ",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOf*"),". For example,\n",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfInterval(t, INTERVAL 1 year)")," returns the same as ",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfYear(t)"),",\n",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfInterval(t, INTERVAL 1 month)")," returns the same as ",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfMonth(t)"),",\n",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfInterval(t, INTERVAL 1 day)")," returns the same as ",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfDay(t)"),",\n",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfInterval(t, INTERVAL 15 minute)")," returns the same as ",(0,l.kt)("inlineCode",{parentName:"p"},"toStartOfFifteenMinutes(t)")," etc."),(0,l.kt)("h2",{id:"totime"},"toTime"),(0,l.kt)("p",null,"Converts a date with time to a certain fixed date, while preserving the time."),(0,l.kt)("h2",{id:"torelativeyearnum"},"toRelativeYearNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the year, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"torelativequarternum"},"toRelativeQuarterNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the quarter, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"torelativemonthnum"},"toRelativeMonthNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the month, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"torelativeweeknum"},"toRelativeWeekNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the week, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"torelativedaynum"},"toRelativeDayNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the day, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"torelativehournum"},"toRelativeHourNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the hour, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"torelativeminutenum"},"toRelativeMinuteNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the minute, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"torelativesecondnum"},"toRelativeSecondNum"),(0,l.kt)("p",null,"Converts a date with time or date to the number of the second, starting from a certain fixed point in the past."),(0,l.kt)("h2",{id:"toisoyear"},"toISOYear"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt16 number containing the ISO Year number."),(0,l.kt)("h2",{id:"toisoweek"},"toISOWeek"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt8 number containing the ISO Week number."),(0,l.kt)("h2",{id:"toweekdatemode"},"toWeek(date","[",",mode","]",")"),(0,l.kt)("p",null,"This function returns the week number for date or datetime. The two-argument form of toWeek() enables you to specify whether the week starts on Sunday or Monday and whether the return value should be in the range from 0 to 53 or from 1 to 53. If the mode argument is omitted, the default mode is 0.\n",(0,l.kt)("inlineCode",{parentName:"p"},"toISOWeek()"),"is a compatibility function that is equivalent to ",(0,l.kt)("inlineCode",{parentName:"p"},"toWeek(date,3)"),".\nThe following table describes how the mode argument works."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Mode"),(0,l.kt)("th",{parentName:"tr",align:null},"First day of week"),(0,l.kt)("th",{parentName:"tr",align:null},"Range"),(0,l.kt)("th",{parentName:"tr",align:null},"Week 1 is the first week \u2026"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Sunday"),(0,l.kt)("td",{parentName:"tr",align:null},"0-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with a Sunday in this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Monday"),(0,l.kt)("td",{parentName:"tr",align:null},"0-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with 4 or more days this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Sunday"),(0,l.kt)("td",{parentName:"tr",align:null},"1-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with a Sunday in this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Monday"),(0,l.kt)("td",{parentName:"tr",align:null},"1-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with 4 or more days this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Sunday"),(0,l.kt)("td",{parentName:"tr",align:null},"0-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with 4 or more days this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Monday"),(0,l.kt)("td",{parentName:"tr",align:null},"0-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with a Monday in this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Sunday"),(0,l.kt)("td",{parentName:"tr",align:null},"1-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with 4 or more days this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"Monday"),(0,l.kt)("td",{parentName:"tr",align:null},"1-53"),(0,l.kt)("td",{parentName:"tr",align:null},"with a Monday in this year")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"Sunday"),(0,l.kt)("td",{parentName:"tr",align:null},"1-53"),(0,l.kt)("td",{parentName:"tr",align:null},"contains January 1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"Monday"),(0,l.kt)("td",{parentName:"tr",align:null},"1-53"),(0,l.kt)("td",{parentName:"tr",align:null},"contains January 1")))),(0,l.kt)("p",null,"For mode values with a meaning of \u201cwith 4 or more days this year,\u201d weeks are numbered according to ISO 8601:1988:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the week containing January 1 has 4 or more days in the new year, it is week 1.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Otherwise, it is the last week of the previous year, and the next week is week 1."))),(0,l.kt)("p",null,"For mode values with a meaning of \u201ccontains January 1\u201d, the week contains January 1 is week 1. It does not matter how many days in the new year the week contained, even if it contained only one day."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"toWeek(date, [, mode][, Timezone])\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"date")," \u2013 Date or DateTime."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mode")," \u2013 Optional parameter, Range of values is ","[","0,9","]",", default is 0."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Timezone")," \u2013 Optional parameter, it behaves like any other conversion function.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT toDate('2016-12-27') AS date, toWeek(date) AS week0, toWeek(date,1) AS week1, toWeek(date,9) AS week9;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500date\u2500\u252c\u2500week0\u2500\u252c\u2500week1\u2500\u252c\u2500week9\u2500\u2510\n\u2502 2016-12-27 \u2502    52 \u2502    52 \u2502     1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"toyearweekdatemode"},"toYearWeek(date","[",",mode","]",")"),(0,l.kt)("p",null,"Returns year and week for a date. The year in the result may be different from the year in the date argument for the first and the last week of the year."),(0,l.kt)("p",null,"The mode argument works exactly like the mode argument to toWeek(). For the single-argument syntax, a mode value of 0 is used."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"toISOYear()"),"is a compatibility function that is equivalent to ",(0,l.kt)("inlineCode",{parentName:"p"},"intDiv(toYearWeek(date,3),100)"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT toDate('2016-12-27') AS date, toYearWeek(date) AS yearWeek0, toYearWeek(date,1) AS yearWeek1, toYearWeek(date,9) AS yearWeek9;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500date\u2500\u252c\u2500yearWeek0\u2500\u252c\u2500yearWeek1\u2500\u252c\u2500yearWeek9\u2500\u2510\n\u2502 2016-12-27 \u2502    201652 \u2502    201652 \u2502    201701 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"date_trunc"},"date","_","trunc"),(0,l.kt)("p",null,"Truncates date and time data to the specified part of date."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"date_trunc(unit, value[, timezone])\n")),(0,l.kt)("p",null,"Alias: ",(0,l.kt)("inlineCode",{parentName:"p"},"dateTrunc"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"unit")," \u2014 The type of interval to truncate the result. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/syntax#syntax-string-literal"},"String Literal"),".\nPossible values:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"second")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minute")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"week")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"month")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"quarter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"year")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"value")," \u2014 Date and time. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"timezone")," \u2014 ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-timezone"},"Timezone name")," for the returned value (optional). If not specified, the function uses the timezone of the ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," parameter. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),"."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Value, truncated to the specified part of date.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"Datetime"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query without timezone:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT now(), date_trunc('hour', now());\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500now()\u2500\u252c\u2500date_trunc('hour', now())\u2500\u2510\n\u2502 2020-09-28 10:40:45 \u2502       2020-09-28 10:00:00 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("p",null,"Query with the specified timezone:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT now(), date_trunc('hour', now(), 'Asia/Istanbul');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500now()\u2500\u252c\u2500date_trunc('hour', now(), 'Asia/Istanbul')\u2500\u2510\n\u2502 2020-09-28 10:46:26 \u2502                        2020-09-28 13:00:00 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"See Also")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tostartofintervaltime-or-data-interval-x-unit-time-zone"},"toStartOfInterval"))),(0,l.kt)("h2",{id:"date_add"},"date","_","add"),(0,l.kt)("p",null,"Adds the time interval or date interval to the provided date or date with time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"date_add(unit, value, date)\n")),(0,l.kt)("p",null,"Aliases: ",(0,l.kt)("inlineCode",{parentName:"p"},"dateAdd"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"DATE_ADD"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"unit")," \u2014 The type of interval to add. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".\nPossible values:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"second")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minute")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"week")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"month")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"quarter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"year")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"value")," \u2014 Value of interval to add. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Int"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"date")," \u2014 The date or date with time to which ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," is added. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"Date or date with time obtained by adding ",(0,l.kt)("inlineCode",{parentName:"p"},"value"),", expressed in ",(0,l.kt)("inlineCode",{parentName:"p"},"unit"),", to ",(0,l.kt)("inlineCode",{parentName:"p"},"date"),"."),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT date_add(YEAR, 3, toDate('2018-01-01'));\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500plus(toDate('2018-01-01'), toIntervalYear(3))\u2500\u2510\n\u2502                                    2021-01-01 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"date_diff"},"date","_","diff"),(0,l.kt)("p",null,"Returns the difference between two dates or dates with time values."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"date_diff('unit', startdate, enddate, [timezone])\n")),(0,l.kt)("p",null,"Aliases: ",(0,l.kt)("inlineCode",{parentName:"p"},"dateDiff"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"DATE_DIFF"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"unit")," \u2014 The type of interval for result. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".\nPossible values:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"second")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minute")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"week")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"month")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"quarter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"year")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"startdate")," \u2014 The first time value to subtract (the subtrahend). ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"enddate")," \u2014 The second time value to subtract from (the minuend). ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"timezone")," \u2014 ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-timezone"},"Timezone name")," (optional). If specified, it is applied to both ",(0,l.kt)("inlineCode",{parentName:"p"},"startdate")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"enddate"),". If not specified, timezones of ",(0,l.kt)("inlineCode",{parentName:"p"},"startdate")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"enddate")," are used. If they are not the same, the result is unspecified. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),"."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"Difference between ",(0,l.kt)("inlineCode",{parentName:"p"},"enddate")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"startdate")," expressed in ",(0,l.kt)("inlineCode",{parentName:"p"},"unit"),"."),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Int"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'));\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'))\u2500\u2510\n\u2502                                                                                     25 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"date_sub"},"date","_","sub"),(0,l.kt)("p",null,"Subtracts the time interval or date interval from the provided date or date with time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"date_sub(unit, value, date)\n")),(0,l.kt)("p",null,"Aliases: ",(0,l.kt)("inlineCode",{parentName:"p"},"dateSub"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"DATE_SUB"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"unit")," \u2014 The type of interval to subtract. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".\nPossible values:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"second")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minute")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"week")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"month")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"quarter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"year")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"value")," \u2014 Value of interval to subtract. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Int"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"date")," \u2014 The date or date with time from which ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," is subtracted. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"Date or date with time obtained by subtracting ",(0,l.kt)("inlineCode",{parentName:"p"},"value"),", expressed in ",(0,l.kt)("inlineCode",{parentName:"p"},"unit"),", from ",(0,l.kt)("inlineCode",{parentName:"p"},"date"),"."),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT date_sub(YEAR, 3, toDate('2018-01-01'));\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500minus(toDate('2018-01-01'), toIntervalYear(3))\u2500\u2510\n\u2502                                     2015-01-01 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"timestamp_add"},"timestamp","_","add"),(0,l.kt)("p",null,"Adds the specified time value with the provided date or date time value."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"timestamp_add(date, INTERVAL value unit)\n")),(0,l.kt)("p",null,"Aliases: ",(0,l.kt)("inlineCode",{parentName:"p"},"timeStampAdd"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"TIMESTAMP_ADD"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"date")," \u2014 Date or date with time. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"value")," \u2014 Value of interval to add. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Int"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"unit")," \u2014 The type of interval to add. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".\nPossible values:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"second")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minute")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"week")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"month")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"quarter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"year"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"Date or date with time with the specified ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," expressed in ",(0,l.kt)("inlineCode",{parentName:"p"},"unit")," added to ",(0,l.kt)("inlineCode",{parentName:"p"},"date"),"."),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select timestamp_add(toDate('2018-01-01'), INTERVAL 3 MONTH);\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500plus(toDate('2018-01-01'), toIntervalMonth(3))\u2500\u2510\n\u2502                                     2018-04-01 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"timestamp_sub"},"timestamp","_","sub"),(0,l.kt)("p",null,"Subtracts the time interval from the provided date or date with time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"timestamp_sub(unit, value, date)\n")),(0,l.kt)("p",null,"Aliases: ",(0,l.kt)("inlineCode",{parentName:"p"},"timeStampSub"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"TIMESTAMP_SUB"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"unit")," \u2014 The type of interval to subtract. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".\nPossible values:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"second")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minute")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"week")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"month")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"quarter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"year")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"value")," \u2014 Value of interval to subtract. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Int"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"date")," \u2014 Date or date with time. ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"Date or date with time obtained by subtracting ",(0,l.kt)("inlineCode",{parentName:"p"},"value"),", expressed in ",(0,l.kt)("inlineCode",{parentName:"p"},"unit"),", from ",(0,l.kt)("inlineCode",{parentName:"p"},"date"),"."),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select timestamp_sub(MONTH, 5, toDateTime('2018-12-18 01:02:03'));\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500minus(toDateTime('2018-12-18 01:02:03'), toIntervalMonth(5))\u2500\u2510\n\u2502                                          2018-07-18 01:02:03 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"now"},"now"),(0,l.kt)("p",null,"Returns the current date and time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"now([timezone])\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezone")," \u2014 ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-timezone"},"Timezone name")," for the returned value (optional). ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Current date and time.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"Datetime"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query without timezone:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT now();\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500now()\u2500\u2510\n\u2502 2020-10-17 07:42:09 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("p",null,"Query with the specified timezone:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT now('Asia/Istanbul');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500now('Asia/Istanbul')\u2500\u2510\n\u2502  2020-10-17 10:42:23 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"today"},"today"),(0,l.kt)("p",null,"Accepts zero arguments and returns the current date at one of the moments of request execution.\nThe same as \u2018toDate(now())\u2019."),(0,l.kt)("h2",{id:"yesterday"},"yesterday"),(0,l.kt)("p",null,"Accepts zero arguments and returns yesterday\u2019s date at one of the moments of request execution.\nThe same as \u2018today() - 1\u2019."),(0,l.kt)("h2",{id:"timeslot"},"timeSlot"),(0,l.kt)("p",null,"Rounds the time to the half hour."),(0,l.kt)("h2",{id:"toyyyymm"},"toYYYYMM"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt32 number containing the year and month number (YYYY ","*"," 100 + MM)."),(0,l.kt)("h2",{id:"toyyyymmdd"},"toYYYYMMDD"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt32 number containing the year and month number (YYYY ","*"," 10000 + MM ","*"," 100 + DD)."),(0,l.kt)("h2",{id:"toyyyymmddhhmmss"},"toYYYYMMDDhhmmss"),(0,l.kt)("p",null,"Converts a date or date with time to a UInt64 number containing the year and month number (YYYY ","*"," 10000000000 + MM ","*"," 100000000 + DD ","*"," 1000000 + hh ","*"," 10000 + mm ","*"," 100 + ss)."),(0,l.kt)("h2",{id:"addyears-addmonths-addweeks-adddays-addhours-addminutes-addseconds-addquarters"},"addYears, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addQuarters"),(0,l.kt)("p",null,"Function adds a Date/DateTime interval to a Date/DateTime and then return the Date/DateTime. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"WITH\n    toDate('2018-01-01') AS date,\n    toDateTime('2018-01-01 00:00:00') AS date_time\nSELECT\n    addYears(date, 1) AS add_years_with_date,\n    addYears(date_time, 1) AS add_years_with_date_time\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500add_years_with_date\u2500\u252c\u2500add_years_with_date_time\u2500\u2510\n\u2502          2019-01-01 \u2502      2019-01-01 00:00:00 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"subtractyears-subtractmonths-subtractweeks-subtractdays-subtracthours-subtractminutes-subtractseconds-subtractquarters"},"subtractYears, subtractMonths, subtractWeeks, subtractDays, subtractHours, subtractMinutes, subtractSeconds, subtractQuarters"),(0,l.kt)("p",null,"Function subtract a Date/DateTime interval to a Date/DateTime and then return the Date/DateTime. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"WITH\n    toDate('2019-01-01') AS date,\n    toDateTime('2019-01-01 00:00:00') AS date_time\nSELECT\n    subtractYears(date, 1) AS subtract_years_with_date,\n    subtractYears(date_time, 1) AS subtract_years_with_date_time\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500subtract_years_with_date\u2500\u252c\u2500subtract_years_with_date_time\u2500\u2510\n\u2502               2018-01-01 \u2502           2018-01-01 00:00:00 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"timeslotsstarttime-duration-size"},"timeSlots(StartTime, Duration,","[",", Size","]",")"),(0,l.kt)("p",null,"For a time interval starting at \u2018StartTime\u2019 and continuing for \u2018Duration\u2019 seconds, it returns an array of moments in time, consisting of points from this interval rounded down to the \u2018Size\u2019 in seconds. \u2018Size\u2019 is an optional parameter: a constant UInt32, set to 1800 by default.\nFor example, ",(0,l.kt)("inlineCode",{parentName:"p"},"timeSlots(toDateTime('2012-01-01 12:20:00'), 600) = [toDateTime('2012-01-01 12:00:00'), toDateTime('2012-01-01 12:30:00')]"),".\nThis is necessary for searching for pageviews in the corresponding session."),(0,l.kt)("h2",{id:"formatdatetime"},"formatDateTime"),(0,l.kt)("p",null,"Formats a Time according to the given Format string. Format is a constant expression, so you cannot have multiple formats for a single result column."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"formatDateTime(Time, Format\\[, Timezone\\])\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value(s)")),(0,l.kt)("p",null,"Returns time and date values according to the determined format."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Replacement fields"),"\nUsing replacement fields, you can define a pattern for the resulting string. \u201cExample\u201d column shows formatting result for ",(0,l.kt)("inlineCode",{parentName:"p"},"2018-01-02 22:33:44"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Placeholder"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%C"),(0,l.kt)("td",{parentName:"tr",align:null},"year divided by 100 and truncated to integer (00-99)"),(0,l.kt)("td",{parentName:"tr",align:null},"20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%d"),(0,l.kt)("td",{parentName:"tr",align:null},"day of the month, zero-padded (01-31)"),(0,l.kt)("td",{parentName:"tr",align:null},"02")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%D"),(0,l.kt)("td",{parentName:"tr",align:null},"Short MM/DD/YY date, equivalent to %m/%d/%y"),(0,l.kt)("td",{parentName:"tr",align:null},"01/02/18")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%e"),(0,l.kt)("td",{parentName:"tr",align:null},"day of the month, space-padded ( 1-31)"),(0,l.kt)("td",{parentName:"tr",align:null},"\xa0"," 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%F"),(0,l.kt)("td",{parentName:"tr",align:null},"short YYYY-MM-DD date, equivalent to %Y-%m-%d"),(0,l.kt)("td",{parentName:"tr",align:null},"2018-01-02")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%G"),(0,l.kt)("td",{parentName:"tr",align:null},"four-digit year format for ISO week number, calculated from the week-based year ",(0,l.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/ISO_8601#Week_dates"},"defined by the ISO 8601")," standard, normally useful only with %V"),(0,l.kt)("td",{parentName:"tr",align:null},"2018")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%g"),(0,l.kt)("td",{parentName:"tr",align:null},"two-digit year format, aligned to ISO 8601, abbreviated from four-digit notation"),(0,l.kt)("td",{parentName:"tr",align:null},"18")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%H"),(0,l.kt)("td",{parentName:"tr",align:null},"hour in 24h format (00-23)"),(0,l.kt)("td",{parentName:"tr",align:null},"22")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%I"),(0,l.kt)("td",{parentName:"tr",align:null},"hour in 12h format (01-12)"),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%j"),(0,l.kt)("td",{parentName:"tr",align:null},"day of the year (001-366)"),(0,l.kt)("td",{parentName:"tr",align:null},"002")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%m"),(0,l.kt)("td",{parentName:"tr",align:null},"month as a decimal number (01-12)"),(0,l.kt)("td",{parentName:"tr",align:null},"01")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%M"),(0,l.kt)("td",{parentName:"tr",align:null},"minute (00-59)"),(0,l.kt)("td",{parentName:"tr",align:null},"33")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%n"),(0,l.kt)("td",{parentName:"tr",align:null},"new-line character (\u2018\u2019)"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%p"),(0,l.kt)("td",{parentName:"tr",align:null},"AM or PM designation"),(0,l.kt)("td",{parentName:"tr",align:null},"PM")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%Q"),(0,l.kt)("td",{parentName:"tr",align:null},"Quarter (1-4)"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%R"),(0,l.kt)("td",{parentName:"tr",align:null},"24-hour HH:MM time, equivalent to %H:%M"),(0,l.kt)("td",{parentName:"tr",align:null},"22:33")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%S"),(0,l.kt)("td",{parentName:"tr",align:null},"second (00-59)"),(0,l.kt)("td",{parentName:"tr",align:null},"44")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%t"),(0,l.kt)("td",{parentName:"tr",align:null},"horizontal-tab character (\u2019)"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%T"),(0,l.kt)("td",{parentName:"tr",align:null},"ISO 8601 time format (HH:MM:SS), equivalent to %H:%M:%S"),(0,l.kt)("td",{parentName:"tr",align:null},"22:33:44")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%u"),(0,l.kt)("td",{parentName:"tr",align:null},"ISO 8601 weekday as number with Monday as 1 (1-7)"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%V"),(0,l.kt)("td",{parentName:"tr",align:null},"ISO 8601 week number (01-53)"),(0,l.kt)("td",{parentName:"tr",align:null},"01")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%w"),(0,l.kt)("td",{parentName:"tr",align:null},"weekday as a decimal number with Sunday as 0 (0-6)"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%y"),(0,l.kt)("td",{parentName:"tr",align:null},"Year, last two digits (00-99)"),(0,l.kt)("td",{parentName:"tr",align:null},"18")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%Y"),(0,l.kt)("td",{parentName:"tr",align:null},"Year"),(0,l.kt)("td",{parentName:"tr",align:null},"2018")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%%"),(0,l.kt)("td",{parentName:"tr",align:null},"a % sign"),(0,l.kt)("td",{parentName:"tr",align:null},"%")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT formatDateTime(toDate('2010-01-04'), '%g')\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u250c\u2500formatDateTime(toDate('2010-01-04'), '%g')\u2500\u2510\n\u2502 10                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"dataname"},"dateName"),(0,l.kt)("p",null,"Returns specified part of date."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"dateName(date_part, date)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"date_part")," \u2014 Date part. Possible values: 'year', 'quarter', 'month', 'week', 'dayofyear', 'day', 'weekday', 'hour', 'minute', 'second'. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"date")," \u2014 Date. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/date"},"Date"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime")," or ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezone")," \u2014 Timezone. Optional. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The specified part of date.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string#string"},"String")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"WITH toDateTime('2021-04-14 11:22:33') AS date_value\nSELECT dateName('year', date_value), dateName('month', date_value), dateName('day', date_value);\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500dateName('year', date_value)\u2500\u252c\u2500dateName('month', date_value)\u2500\u252c\u2500dateName('day', date_value)\u2500\u2510\n\u2502 2021                         \u2502 April                         \u2502 14                          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n")),(0,l.kt)("h2",{id:"fromunixfime"},"FROM","_","UNIXTIME"),(0,l.kt)("p",null,"Function converts Unix timestamp to a calendar date and a time of a day. When there is only a single argument of ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Integer")," type, it acts in the same way as ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/functions/type-conversion-functions#todatetime"},"toDateTime")," and return ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime")," type."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT FROM_UNIXTIME(423543535);\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500FROM_UNIXTIME(423543535)\u2500\u2510\n\u2502      1983-06-04 10:58:55 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("p",null,"When there are two arguments: first is an ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Integer")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/datetime"},"DateTime"),", second is a constant format string \u2014 it acts in the same way as ",(0,l.kt)("a",{parentName:"p",href:"#formatdatetime"},"formatDateTime")," and return ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string#string"},"String")," type."),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT FROM_UNIXTIME(1234334543, '%Y-%m-%d %R:%S') AS DateTime;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500DateTime\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 2009-02-11 14:42:23 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"tomodifiedjulianday"},"toModifiedJulianDay"),(0,l.kt)("p",null,"Converts a ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar"},"Proleptic Gregorian calendar")," date in text form ",(0,l.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DD")," to a ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Julian_day#Variants"},"Modified Julian Day")," number in Int32. This function supports date from ",(0,l.kt)("inlineCode",{parentName:"p"},"0000-01-01")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"9999-12-31"),". It raises an exception if the argument cannot be parsed as a date, or the date is invalid."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"toModifiedJulianDay(date)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"date")," \u2014 Date in text form. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String")," or ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/fixedstring"},"FixedString"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Modified Julian Day number.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Int32"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT toModifiedJulianDay('2020-01-01');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500toModifiedJulianDay('2020-01-01')\u2500\u2510\n\u2502                             58849 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"tomodifiedjuliandayornull"},"toModifiedJulianDayOrNull"),(0,l.kt)("p",null,"Similar to ",(0,l.kt)("a",{parentName:"p",href:"#tomodifiedjulianday"},"toModifiedJulianDay()"),", but instead of raising exceptions it returns ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"toModifiedJulianDayOrNull(date)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"date")," \u2014 Date in text form. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String")," or ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/fixedstring"},"FixedString"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Modified Julian Day number.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Nullable(Int32)"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT toModifiedJulianDayOrNull('2020-01-01');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500toModifiedJulianDayOrNull('2020-01-01')\u2500\u2510\n\u2502                                   58849 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"frommodifiedjulianday"},"fromModifiedJulianDay"),(0,l.kt)("p",null,"Converts a ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Julian_day#Variants"},"Modified Julian Day")," number to a ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar"},"Proleptic Gregorian calendar")," date in text form ",(0,l.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DD"),". This function supports day number from ",(0,l.kt)("inlineCode",{parentName:"p"},"-678941")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"2973119")," (which represent 0000-01-01 and 9999-12-31 respectively). It raises an exception if the day number is outside of the supported range."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"fromModifiedJulianDay(day)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")," \u2014 Modified Julian Day number. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Any integral types"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Date in text form.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT fromModifiedJulianDay(58849);\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500fromModifiedJulianDay(58849)\u2500\u2510\n\u2502 2020-01-01                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"frommodifiedjuliandayornull"},"fromModifiedJulianDayOrNull"),(0,l.kt)("p",null,"Similar to ",(0,l.kt)("a",{parentName:"p",href:"#frommodifiedjuliandayornull"},"fromModifiedJulianDayOrNull()"),", but instead of raising exceptions it returns ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"fromModifiedJulianDayOrNull(day)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")," \u2014 Modified Julian Day number. ",(0,l.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"Any integral types"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Date in text form.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"Nullable(String)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT fromModifiedJulianDayOrNull(58849);\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500fromModifiedJulianDayOrNull(58849)\u2500\u2510\n\u2502 2020-01-01                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}k.isMDXComponent=!0}}]);