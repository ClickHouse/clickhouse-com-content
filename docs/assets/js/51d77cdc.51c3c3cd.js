"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[94493],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),a=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=a(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=a(t),f=i,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(m,l(l({ref:n},s),{},{components:t})):r.createElement(m,l({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=d;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:i,l[1]=u;for(var a=2;a<o;a++)l[a]=t[a];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3251:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return u},metadata:function(){return a},toc:function(){return p}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),l=["components"],u={sidebar_position:68,sidebar_label:"Build on Linux for RISC-V 64"},c="How to Build ClickHouse on Linux for RISC-V 64 Architecture",a={unversionedId:"en/development/build-cross-riscv",id:"en/development/build-cross-riscv",title:"How to Build ClickHouse on Linux for RISC-V 64 Architecture",description:"As of writing (11.11.2021) building for risc-v considered to be highly experimental. Not all features can be enabled.",source:"@site/docs/en/development/build-cross-riscv.md",sourceDirName:"en/development",slug:"/en/development/build-cross-riscv",permalink:"/en/development/build-cross-riscv",tags:[],version:"current",sidebarPosition:68,frontMatter:{sidebar_position:68,sidebar_label:"Build on Linux for RISC-V 64"},sidebar:"tutorialSidebar",previous:{title:"Build on Linux for AARCH64 (ARM64)",permalink:"/en/development/build-cross-arm"},next:{title:"C++ Guide",permalink:"/en/development/style"}},s={},p=[{value:"Install Clang-13",id:"install-clang-13",level:2},{value:"Build ClickHouse",id:"build-clickhouse",level:2}],d={toc:p};function f(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-build-clickhouse-on-linux-for-risc-v-64-architecture"},"How to Build ClickHouse on Linux for RISC-V 64 Architecture"),(0,o.kt)("p",null,"As of writing (11.11.2021) building for risc-v considered to be highly experimental. Not all features can be enabled."),(0,o.kt)("p",null,"This is for the case when you have Linux machine and want to use it to build ",(0,o.kt)("inlineCode",{parentName:"p"},"clickhouse")," binary that will run on another Linux machine with RISC-V 64 CPU architecture. This is intended for continuous integration checks that run on Linux servers."),(0,o.kt)("p",null,"The cross-build for RISC-V 64 is based on the ",(0,o.kt)("a",{parentName:"p",href:"/en/development/build"},"Build instructions"),", follow them first."),(0,o.kt)("h2",{id:"install-clang-13"},"Install Clang-13"),(0,o.kt)("p",null,"Follow the instructions from ",(0,o.kt)("a",{parentName:"p",href:"https://apt.llvm.org/"},"https://apt.llvm.org/")," for your Ubuntu or Debian setup or do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"\n')),(0,o.kt)("h2",{id:"build-clickhouse"},"Build ClickHouse"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ClickHouse\nmkdir build-riscv64\nCC=clang-13 CXX=clang++-13 cmake . -Bbuild-riscv64 -G Ninja -DCMAKE_TOOLCHAIN_FILE=cmake/linux/toolchain-riscv64.cmake -DGLIBC_COMPATIBILITY=OFF -DENABLE_LDAP=OFF  -DOPENSSL_NO_ASM=ON -DENABLE_JEMALLOC=ON -DENABLE_PARQUET=OFF -DENABLE_ORC=OFF -DUSE_UNWIND=OFF -DENABLE_GRPC=OFF -DENABLE_HDFS=OFF -DENABLE_MYSQL=OFF\nninja -C build-riscv64\n")),(0,o.kt)("p",null,"The resulting binary will run only on Linux with the RISC-V 64 CPU architecture."))}f.isMDXComponent=!0}}]);