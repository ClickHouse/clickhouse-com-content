"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[1159],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,g=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68328:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var a=t(87462),r=t(63366),l=(t(67294),t(3905)),o=["components"],s={sidebar_position:65,sidebar_label:"Introspection"},i="Introspection Functions",c={unversionedId:"en/sql-reference/functions/introspection",id:"en/sql-reference/functions/introspection",title:"Introspection Functions",description:"introspection-functions}",source:"@site/docs/en/sql-reference/functions/introspection.md",sourceDirName:"en/sql-reference/functions",slug:"/en/sql-reference/functions/introspection",permalink:"/docs/en/sql-reference/functions/introspection",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/functions/introspection.md",tags:[],version:"current",sidebarPosition:65,frontMatter:{sidebar_position:65,sidebar_label:"Introspection"},sidebar:"tutorialSidebar",previous:{title:"Machine Learning",permalink:"/docs/en/sql-reference/functions/machine-learning-functions"},next:{title:"Tuples",permalink:"/docs/en/sql-reference/functions/tuple-functions"}},u={},p=[{value:"addressToLine",id:"addresstoline",level:2},{value:"addressToLineWithInlines",id:"addresstolinewithinlines",level:2},{value:"addressToSymbol",id:"addresstosymbol",level:2},{value:"demangle",id:"demangle",level:2},{value:"tid",id:"tid",level:2},{value:"logTrace",id:"logtrace",level:2}],d={toc:p};function m(e){var n=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"introspection-functions"},"Introspection Functions"),(0,l.kt)("p",null,"You can use functions described in this chapter to introspect ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Executable_and_Linkable_Format"},"ELF")," and ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/DWARF"},"DWARF")," for query profiling."),(0,l.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"These functions are slow and may impose security considerations."))),(0,l.kt)("p",null,"For proper operation of introspection functions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"clickhouse-common-static-dbg")," package.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Set the ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/operations/settings/#settings-allow_introspection_functions"},"allow_introspection_functions")," setting to 1."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"For security reasons introspection functions are disabled by default.\n")))),(0,l.kt)("p",null,"ClickHouse saves profiler reports to the ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/operations/system-tables/trace_log#system_tables-trace_log"},"trace_log")," system table. Make sure the table and profiler are configured properly."),(0,l.kt)("h2",{id:"addresstoline"},"addressToLine"),(0,l.kt)("p",null,"Converts virtual memory address inside ClickHouse server process to the filename and the line number in ClickHouse source code."),(0,l.kt)("p",null,"If you use official ClickHouse packages, you need to install the ",(0,l.kt)("inlineCode",{parentName:"p"},"clickhouse-common-static-dbg")," package."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"addressToLine(address_of_binary_instruction)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address_of_binary_instruction")," (",(0,l.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Address of instruction in a running process.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Source code filename and the line number in this file delimited by colon."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"For example, `/build/obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:199`, where `199` is a line number.\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Name of a binary, if the function couldn\u2019t find the debug information.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Empty string, if the address is not valid."))),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/data-types/string"},"String"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Enabling introspection functions:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SET allow_introspection_functions=1;\n")),(0,l.kt)("p",null,"Selecting the first string from the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace_log")," system table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.trace_log LIMIT 1 \\G;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nevent_date:              2019-11-19\nevent_time:              2019-11-19 18:57:23\nrevision:                54429\ntimer_type:              Real\nthread_number:           48\nquery_id:                421b6855-1858-45a5-8f37-f383409d6d72\ntrace:                   [140658411141617,94784174532828,94784076370703,94784076372094,94784076361020,94784175007680,140658411116251,140658403895439]\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"trace")," field contains the stack trace at the moment of sampling."),(0,l.kt)("p",null,"Getting the source code filename and the line number for a single address:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT addressToLine(94784076370703) \\G;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\naddressToLine(94784076370703): /build/obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:199\n")),(0,l.kt)("p",null,"Applying the function to the whole stack trace:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    arrayStringConcat(arrayMap(x -> addressToLine(x), trace), '\\n') AS trace_source_code_lines\nFROM system.trace_log\nLIMIT 1\n\\G\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/functions/array-functions#array-map"},"arrayMap")," function allows to process each individual element of the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace")," array by the ",(0,l.kt)("inlineCode",{parentName:"p"},"addressToLine")," function. The result of this processing you see in the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace_source_code_lines")," column of output."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\ntrace_source_code_lines: /lib/x86_64-linux-gnu/libpthread-2.27.so\n/usr/lib/debug/usr/bin/clickhouse\n/build/obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:199\n/build/obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:155\n/usr/include/c++/9/bits/atomic_base.h:551\n/usr/lib/debug/usr/bin/clickhouse\n/lib/x86_64-linux-gnu/libpthread-2.27.so\n/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97\n")),(0,l.kt)("h2",{id:"addresstolinewithinlines"},"addressToLineWithInlines"),(0,l.kt)("p",null,"Similar to ",(0,l.kt)("inlineCode",{parentName:"p"},"addressToLine"),", but it will return an Array with all inline functions, and will be much slower as a price."),(0,l.kt)("p",null,"If you use official ClickHouse packages, you need to install the ",(0,l.kt)("inlineCode",{parentName:"p"},"clickhouse-common-static-dbg")," package."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"addressToLineWithInlines(address_of_binary_instruction)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address_of_binary_instruction")," (",(0,l.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Address of instruction in a running process.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Array which first element is source code filename and the line number in this file delimited by colon. And from second element, inline functions' source code filename and line number and function name are listed.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Array with single element which is name of a binary, if the function couldn\u2019t find the debug information.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Empty array, if the address is not valid."))),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/data-types/array"},"Array(String)"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Enabling introspection functions:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SET allow_introspection_functions=1;\n")),(0,l.kt)("p",null,"Applying the function to address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT addressToLineWithInlines(531055181::UInt64);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500addressToLineWithInlines(CAST('531055181', 'UInt64'))\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 ['./src/Functions/addressToLineWithInlines.cpp:98','./build_normal_debug/./src/Functions/addressToLineWithInlines.cpp:176:DB::(anonymous namespace)::FunctionAddressToLineWithInlines::implCached(unsigned long) const'] \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("p",null,"Applying the function to the whole stack trace:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    ta, addressToLineWithInlines(arrayJoin(trace) as ta)\nFROM system.trace_log\nWHERE\n    query_id = '5e173544-2020-45de-b645-5deebe2aae54';\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/functions/array-functions#array-functions-join"},"arrayJoin")," functions will split array to rows."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500ta\u2500\u252c\u2500addressToLineWithInlines(arrayJoin(trace))\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 365497529 \u2502 ['./build_normal_debug/./contrib/libcxx/include/string_view:252']                                                                                                                                                        \u2502\n\u2502 365593602 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:191']                                                                                                                                                                      \u2502\n\u2502 365593866 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365592528 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365591003 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:477']                                                                                                                                                                      \u2502\n\u2502 365590479 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:442']                                                                                                                                                                      \u2502\n\u2502 365590600 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:457']                                                                                                                                                                      \u2502\n\u2502 365598941 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365607098 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365590571 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:451']                                                                                                                                                                      \u2502\n\u2502 365598941 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365607098 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365590571 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:451']                                                                                                                                                                      \u2502\n\u2502 365598941 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365607098 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365590571 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:451']                                                                                                                                                                      \u2502\n\u2502 365598941 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:0']                                                                                                                                                                        \u2502\n\u2502 365597289 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:807']                                                                                                                                                                      \u2502\n\u2502 365599840 \u2502 ['./build_normal_debug/./src/Common/Dwarf.cpp:1118']                                                                                                                                                                     \u2502\n\u2502 531058145 \u2502 ['./build_normal_debug/./src/Functions/addressToLineWithInlines.cpp:152']                                                                                                                                                \u2502\n\u2502 531055181 \u2502 ['./src/Functions/addressToLineWithInlines.cpp:98','./build_normal_debug/./src/Functions/addressToLineWithInlines.cpp:176:DB::(anonymous namespace)::FunctionAddressToLineWithInlines::implCached(unsigned long) const'] \u2502\n\u2502 422333613 \u2502 ['./build_normal_debug/./src/Functions/IFunctionAdaptors.h:21']                                                                                                                                                          \u2502\n\u2502 586866022 \u2502 ['./build_normal_debug/./src/Functions/IFunction.cpp:216']                                                                                                                                                               \u2502\n\u2502 586869053 \u2502 ['./build_normal_debug/./src/Functions/IFunction.cpp:264']                                                                                                                                                               \u2502\n\u2502 586873237 \u2502 ['./build_normal_debug/./src/Functions/IFunction.cpp:334']                                                                                                                                                               \u2502\n\u2502 597901620 \u2502 ['./build_normal_debug/./src/Interpreters/ExpressionActions.cpp:601']                                                                                                                                                    \u2502\n\u2502 597898534 \u2502 ['./build_normal_debug/./src/Interpreters/ExpressionActions.cpp:718']                                                                                                                                                    \u2502\n\u2502 630442912 \u2502 ['./build_normal_debug/./src/Processors/Transforms/ExpressionTransform.cpp:23']                                                                                                                                          \u2502\n\u2502 546354050 \u2502 ['./build_normal_debug/./src/Processors/ISimpleTransform.h:38']                                                                                                                                                          \u2502\n\u2502 626026993 \u2502 ['./build_normal_debug/./src/Processors/ISimpleTransform.cpp:89']                                                                                                                                                        \u2502\n\u2502 626294022 \u2502 ['./build_normal_debug/./src/Processors/Executors/ExecutionThreadContext.cpp:45']                                                                                                                                        \u2502\n\u2502 626293730 \u2502 ['./build_normal_debug/./src/Processors/Executors/ExecutionThreadContext.cpp:63']                                                                                                                                        \u2502\n\u2502 626169525 \u2502 ['./build_normal_debug/./src/Processors/Executors/PipelineExecutor.cpp:213']                                                                                                                                             \u2502\n\u2502 626170308 \u2502 ['./build_normal_debug/./src/Processors/Executors/PipelineExecutor.cpp:178']                                                                                                                                             \u2502\n\u2502 626166348 \u2502 ['./build_normal_debug/./src/Processors/Executors/PipelineExecutor.cpp:329']                                                                                                                                             \u2502\n\u2502 626163461 \u2502 ['./build_normal_debug/./src/Processors/Executors/PipelineExecutor.cpp:84']                                                                                                                                              \u2502\n\u2502 626323536 \u2502 ['./build_normal_debug/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:85']                                                                                                                                  \u2502\n\u2502 626323277 \u2502 ['./build_normal_debug/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:112']                                                                                                                                 \u2502\n\u2502 626323133 \u2502 ['./build_normal_debug/./contrib/libcxx/include/type_traits:3682']                                                                                                                                                       \u2502\n\u2502 626323041 \u2502 ['./build_normal_debug/./contrib/libcxx/include/tuple:1415']                                                                                                                                                             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"addresstosymbol"},"addressToSymbol"),(0,l.kt)("p",null,"Converts virtual memory address inside ClickHouse server process to the symbol from ClickHouse object files."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"addressToSymbol(address_of_binary_instruction)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address_of_binary_instruction")," (",(0,l.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Address of instruction in a running process.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Symbol from ClickHouse object files."),(0,l.kt)("li",{parentName:"ul"},"Empty string, if the address is not valid.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/data-types/string"},"String"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Enabling introspection functions:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SET allow_introspection_functions=1;\n")),(0,l.kt)("p",null,"Selecting the first string from the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace_log")," system table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.trace_log LIMIT 1 \\G;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nevent_date:    2019-11-20\nevent_time:    2019-11-20 16:57:59\nrevision:      54429\ntimer_type:    Real\nthread_number: 48\nquery_id:      724028bf-f550-45aa-910d-2af6212b94ac\ntrace:         [94138803686098,94138815010911,94138815096522,94138815101224,94138815102091,94138814222988,94138806823642,94138814457211,94138806823642,94138814457211,94138806823642,94138806795179,94138806796144,94138753770094,94138753771646,94138753760572,94138852407232,140399185266395,140399178045583]\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"trace")," field contains the stack trace at the moment of sampling."),(0,l.kt)("p",null,"Getting a symbol for a single address:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT addressToSymbol(94138803686098) \\G;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\naddressToSymbol(94138803686098): _ZNK2DB24IAggregateFunctionHelperINS_20AggregateFunctionSumImmNS_24AggregateFunctionSumDataImEEEEE19addBatchSinglePlaceEmPcPPKNS_7IColumnEPNS_5ArenaE\n")),(0,l.kt)("p",null,"Applying the function to the whole stack trace:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    arrayStringConcat(arrayMap(x -> addressToSymbol(x), trace), '\\n') AS trace_symbols\nFROM system.trace_log\nLIMIT 1\n\\G\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/functions/array-functions#array-map"},"arrayMap")," function allows to process each individual element of the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace")," array by the ",(0,l.kt)("inlineCode",{parentName:"p"},"addressToSymbols")," function. The result of this processing you see in the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace_symbols")," column of output."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\ntrace_symbols: _ZNK2DB24IAggregateFunctionHelperINS_20AggregateFunctionSumImmNS_24AggregateFunctionSumDataImEEEEE19addBatchSinglePlaceEmPcPPKNS_7IColumnEPNS_5ArenaE\n_ZNK2DB10Aggregator21executeWithoutKeyImplERPcmPNS0_28AggregateFunctionInstructionEPNS_5ArenaE\n_ZN2DB10Aggregator14executeOnBlockESt6vectorIN3COWINS_7IColumnEE13immutable_ptrIS3_EESaIS6_EEmRNS_22AggregatedDataVariantsERS1_IPKS3_SaISC_EERS1_ISE_SaISE_EERb\n_ZN2DB10Aggregator14executeOnBlockERKNS_5BlockERNS_22AggregatedDataVariantsERSt6vectorIPKNS_7IColumnESaIS9_EERS6_ISB_SaISB_EERb\n_ZN2DB10Aggregator7executeERKSt10shared_ptrINS_17IBlockInputStreamEERNS_22AggregatedDataVariantsE\n_ZN2DB27AggregatingBlockInputStream8readImplEv\n_ZN2DB17IBlockInputStream4readEv\n_ZN2DB26ExpressionBlockInputStream8readImplEv\n_ZN2DB17IBlockInputStream4readEv\n_ZN2DB26ExpressionBlockInputStream8readImplEv\n_ZN2DB17IBlockInputStream4readEv\n_ZN2DB28AsynchronousBlockInputStream9calculateEv\n_ZNSt17_Function_handlerIFvvEZN2DB28AsynchronousBlockInputStream4nextEvEUlvE_E9_M_invokeERKSt9_Any_data\n_ZN14ThreadPoolImplI20ThreadFromGlobalPoolE6workerESt14_List_iteratorIS0_E\n_ZZN20ThreadFromGlobalPoolC4IZN14ThreadPoolImplIS_E12scheduleImplIvEET_St8functionIFvvEEiSt8optionalImEEUlvE1_JEEEOS4_DpOT0_ENKUlvE_clEv\n_ZN14ThreadPoolImplISt6threadE6workerESt14_List_iteratorIS0_E\nexecute_native_thread_routine\nstart_thread\nclone\n")),(0,l.kt)("h2",{id:"demangle"},"demangle"),(0,l.kt)("p",null,"Converts a symbol that you can get using the ",(0,l.kt)("a",{parentName:"p",href:"#addresstosymbol"},"addressToSymbol")," function to the C++ function name."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"demangle(symbol)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"symbol")," (",(0,l.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Symbol from an object file.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name of the C++ function."),(0,l.kt)("li",{parentName:"ul"},"Empty string if a symbol is not valid.")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/data-types/string"},"String"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Enabling introspection functions:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SET allow_introspection_functions=1;\n")),(0,l.kt)("p",null,"Selecting the first string from the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace_log")," system table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.trace_log LIMIT 1 \\G;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nevent_date:    2019-11-20\nevent_time:    2019-11-20 16:57:59\nrevision:      54429\ntimer_type:    Real\nthread_number: 48\nquery_id:      724028bf-f550-45aa-910d-2af6212b94ac\ntrace:         [94138803686098,94138815010911,94138815096522,94138815101224,94138815102091,94138814222988,94138806823642,94138814457211,94138806823642,94138814457211,94138806823642,94138806795179,94138806796144,94138753770094,94138753771646,94138753760572,94138852407232,140399185266395,140399178045583]\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"trace")," field contains the stack trace at the moment of sampling."),(0,l.kt)("p",null,"Getting a function name for a single address:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT demangle(addressToSymbol(94138803686098)) \\G;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\ndemangle(addressToSymbol(94138803686098)): DB::IAggregateFunctionHelper<DB::AggregateFunctionSum<unsigned long, unsigned long, DB::AggregateFunctionSumData<unsigned long> > >::addBatchSinglePlace(unsigned long, char*, DB::IColumn const**, DB::Arena*) const\n")),(0,l.kt)("p",null,"Applying the function to the whole stack trace:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    arrayStringConcat(arrayMap(x -> demangle(addressToSymbol(x)), trace), '\\n') AS trace_functions\nFROM system.trace_log\nLIMIT 1\n\\G\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/functions/array-functions#array-map"},"arrayMap")," function allows to process each individual element of the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace")," array by the ",(0,l.kt)("inlineCode",{parentName:"p"},"demangle")," function. The result of this processing you see in the ",(0,l.kt)("inlineCode",{parentName:"p"},"trace_functions")," column of output."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\ntrace_functions: DB::IAggregateFunctionHelper<DB::AggregateFunctionSum<unsigned long, unsigned long, DB::AggregateFunctionSumData<unsigned long> > >::addBatchSinglePlace(unsigned long, char*, DB::IColumn const**, DB::Arena*) const\nDB::Aggregator::executeWithoutKeyImpl(char*&, unsigned long, DB::Aggregator::AggregateFunctionInstruction*, DB::Arena*) const\nDB::Aggregator::executeOnBlock(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, unsigned long, DB::AggregatedDataVariants&, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, std::vector<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >, std::allocator<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> > > >&, bool&)\nDB::Aggregator::executeOnBlock(DB::Block const&, DB::AggregatedDataVariants&, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, std::vector<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >, std::allocator<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> > > >&, bool&)\nDB::Aggregator::execute(std::shared_ptr<DB::IBlockInputStream> const&, DB::AggregatedDataVariants&)\nDB::AggregatingBlockInputStream::readImpl()\nDB::IBlockInputStream::read()\nDB::ExpressionBlockInputStream::readImpl()\nDB::IBlockInputStream::read()\nDB::ExpressionBlockInputStream::readImpl()\nDB::IBlockInputStream::read()\nDB::AsynchronousBlockInputStream::calculate()\nstd::_Function_handler<void (), DB::AsynchronousBlockInputStream::next()::{lambda()#1}>::_M_invoke(std::_Any_data const&)\nThreadPoolImpl<ThreadFromGlobalPool>::worker(std::_List_iterator<ThreadFromGlobalPool>)\nThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::function<void ()>, int, std::optional<unsigned long>)::{lambda()#3}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::function<void ()>, int, std::optional<unsigned long>)::{lambda()#3}&&)::{lambda()#1}::operator()() const\nThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)\nexecute_native_thread_routine\nstart_thread\nclone\n")),(0,l.kt)("h2",{id:"tid"},"tid"),(0,l.kt)("p",null,"Returns id of the thread, in which current ",(0,l.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/development/architecture/#block"},"Block")," is processed."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"tid()\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Current thread id. ",(0,l.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint-ranges"},"Uint64"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT tid();\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500tid()\u2500\u2510\n\u2502  3878 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,l.kt)("h2",{id:"logtrace"},"logTrace"),(0,l.kt)("p",null,"Emits trace log message to server log for each ",(0,l.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/development/architecture/#block"},"Block"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"logTrace('message')\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"message")," \u2014 Message that is emitted to server log. ",(0,l.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/string#string"},"String"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Always returns 0.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT logTrace('logTrace message');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500logTrace('logTrace message')\u2500\u2510\n\u2502                            0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}m.isMDXComponent=!0}}]);