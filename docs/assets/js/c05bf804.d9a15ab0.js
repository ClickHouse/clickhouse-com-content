"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[36550],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=c(n),u=i,k=m["".concat(s,".").concat(u)]||m[u]||p[u]||r;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},15142:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),l=["components"],o={sidebar_position:43,sidebar_label:"Sources of External Dictionaries"},s="Sources of External Dictionaries",c={unversionedId:"en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources",id:"en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources",title:"Sources of External Dictionaries",description:"An external dictionary can be connected from many different sources.",source:"@site/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources.md",sourceDirName:"en/sql-reference/dictionaries/external-dictionaries",slug:"/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources",permalink:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources",tags:[],version:"current",sidebarPosition:43,frontMatter:{sidebar_position:43,sidebar_label:"Sources of External Dictionaries"},sidebar:"tutorialSidebar",previous:{title:"Dictionary Updates",permalink:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime"},next:{title:"Dictionary Key and Fields",permalink:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure"}},d={},p=[{value:"Local File",id:"dicts-external_dicts_dict_sources-local_file",level:2},{value:"Executable File",id:"dicts-external_dicts_dict_sources-executable",level:2},{value:"Executable Pool",id:"dicts-external_dicts_dict_sources-executable_pool",level:2},{value:"Http(s)",id:"dicts-external_dicts_dict_sources-http",level:2},{value:"Known Vulnerability of the ODBC Dictionary Functionality",id:"known-vulnerability-of-the-odbc-dictionary-functionality",level:3},{value:"Example of Connecting Postgresql",id:"example-of-connecting-postgresql",level:3},{value:"Example of Connecting MS SQL Server",id:"example-of-connecting-ms-sql-server",level:3},{value:"DBMS",id:"dbms",level:2},{value:"ODBC",id:"dicts-external_dicts_dict_sources-odbc",level:3},{value:"Mysql",id:"dicts-external_dicts_dict_sources-mysql",level:3},{value:"ClickHouse",id:"dicts-external_dicts_dict_sources-clickhouse",level:3},{value:"Mongodb",id:"dicts-external_dicts_dict_sources-mongodb",level:3},{value:"Redis",id:"dicts-external_dicts_dict_sources-redis",level:3},{value:"Cassandra",id:"dicts-external_dicts_dict_sources-cassandra",level:3},{value:"PostgreSQL",id:"dicts-external_dicts_dict_sources-postgresql",level:3}],m={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sources-of-external-dictionaries"},"Sources of External Dictionaries"),(0,r.kt)("p",null,"An external dictionary can be connected from many different sources."),(0,r.kt)("p",null,"If dictionary is configured using xml-file, the configuration looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<clickhouse>\n  <dictionary>\n    ...\n    <source>\n      <source_type>\n        \x3c!-- Source configuration --\x3e\n      </source_type>\n    </source>\n    ...\n  </dictionary>\n  ...\n</clickhouse>\n")),(0,r.kt)("p",null,"In case of ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/en/sql-reference/statements/create/dictionary"},"DDL-query"),", equal configuration will looks like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DICTIONARY dict_name (...)\n...\nSOURCE(SOURCE_TYPE(param1 val1 ... paramN valN)) -- Source configuration\n...\n")),(0,r.kt)("p",null,"The source is configured in the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," section."),(0,r.kt)("p",null,"For source types ",(0,r.kt)("a",{parentName:"p",href:"#dicts-external_dicts_dict_sources-local_file"},"Local file"),", ",(0,r.kt)("a",{parentName:"p",href:"#dicts-external_dicts_dict_sources-executable"},"Executable file"),", ",(0,r.kt)("a",{parentName:"p",href:"#dicts-external_dicts_dict_sources-http"},"HTTP(s)"),", ",(0,r.kt)("a",{parentName:"p",href:"#dicts-external_dicts_dict_sources-clickhouse"},"ClickHouse"),"\noptional settings are available:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n  <file>\n    <path>/opt/dictionaries/os.tsv</path>\n    <format>TabSeparated</format>\n  </file>\n  <settings>\n      <format_csv_allow_single_quotes>0</format_csv_allow_single_quotes>\n  </settings>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(FILE(path './user_files/os.tsv' format 'TabSeparated'))\nSETTINGS(format_csv_allow_single_quotes = 0)\n")),(0,r.kt)("p",null,"Types of sources (",(0,r.kt)("inlineCode",{parentName:"p"},"source_type"),"):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-local_file"},"Local file")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-executable"},"Executable File")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-executable_pool"},"Executable Pool")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-http"},"HTTP(s)")),(0,r.kt)("li",{parentName:"ul"},"DBMS",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-odbc"},"ODBC")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-mysql"},"MySQL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-clickhouse"},"ClickHouse")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-mongodb"},"MongoDB")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-redis"},"Redis")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-cassandra"},"Cassandra")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dicts-external_dicts_dict_sources-postgresql"},"PostgreSQL"))))),(0,r.kt)("h2",{id:"dicts-external_dicts_dict_sources-local_file"},"Local File"),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n  <file>\n    <path>/opt/dictionaries/os.tsv</path>\n    <format>TabSeparated</format>\n  </file>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(FILE(path './user_files/os.tsv' format 'TabSeparated'))\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"path")," \u2013 The absolute path to the file."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"format")," \u2013 The file format. All the formats described in ",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/interfaces/formats#formats"},"Formats")," are supported.")),(0,r.kt)("p",null,"When dictionary with source ",(0,r.kt)("inlineCode",{parentName:"p"},"FILE")," is created via DDL command (",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE DICTIONARY ..."),"), the source file needs to be located in ",(0,r.kt)("inlineCode",{parentName:"p"},"user_files")," directory, to prevent DB users accessing arbitrary file on ClickHouse node."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See Also")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/table-functions/dictionary#dictionary-function"},"Dictionary function"))),(0,r.kt)("h2",{id:"dicts-external_dicts_dict_sources-executable"},"Executable File"),(0,r.kt)("p",null,"Working with executable files depends on ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout"},"how the dictionary is stored in memory"),". If the dictionary is stored using ",(0,r.kt)("inlineCode",{parentName:"p"},"cache")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"complex_key_cache"),", ClickHouse requests the necessary keys by sending a request to the executable file\u2019s STDIN. Otherwise, ClickHouse starts executable file and treats its output as dictionary data."),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n    <executable>\n        <command>cat /opt/dictionaries/os.tsv</command>\n        <format>TabSeparated</format>\n        <implicit_key>false</implicit_key>\n    </executable>\n</source>\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command")," \u2014 The absolute path to the executable file, or the file name (if the program directory is written to ",(0,r.kt)("inlineCode",{parentName:"li"},"PATH"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"format")," \u2014 The file format. All the formats described in ",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/interfaces/formats#formats"},"Formats")," are supported."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command_termination_timeout")," \u2014 executable script should contain main read-write loop. After dictionary is destroyed, pipe is closed, and executable file will have ",(0,r.kt)("inlineCode",{parentName:"li"},"command_termination_timeout")," seconds to shutdown, before ClickHouse will send SIGTERM signal to child process. Specified in seconds. Default value is 10. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command_read_timeout")," - timeout for reading data from command stdout in milliseconds. Default value 10000. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command_write_timeout")," - timeout for writing data to command stdin in milliseconds. Default value 10000. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"implicit_key")," \u2014 The executable source file can return only values, and the correspondence to the requested keys is determined implicitly \u2014 by the order of rows in the result. Default value is false."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"execute_direct")," - If ",(0,r.kt)("inlineCode",{parentName:"li"},"execute_direct")," = ",(0,r.kt)("inlineCode",{parentName:"li"},"1"),", then ",(0,r.kt)("inlineCode",{parentName:"li"},"command")," will be searched inside user_scripts folder. Additional script arguments can be specified using whitespace separator. Example: ",(0,r.kt)("inlineCode",{parentName:"li"},"script_name arg1 arg2"),". If ",(0,r.kt)("inlineCode",{parentName:"li"},"execute_direct")," = ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"command")," is passed as argument for ",(0,r.kt)("inlineCode",{parentName:"li"},"bin/sh -c"),". Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),". Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"send_chunk_header")," - controls whether to send row count before sending a chunk of data to process. Optional. Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),".")),(0,r.kt)("p",null,"That dictionary source can be configured only via XML configuration. Creating dictionaries with executable source via DDL is disabled, otherwise, the DB user would be able to execute arbitrary binary on ClickHouse node."),(0,r.kt)("h2",{id:"dicts-external_dicts_dict_sources-executable_pool"},"Executable Pool"),(0,r.kt)("p",null,"Executable pool allows loading data from pool of processes. This source does not work with dictionary layouts that need to load all data from source. Executable pool works if the dictionary ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#ways-to-store-dictionaries-in-memory"},"is stored")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"cache"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"complex_key_cache"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ssd_cache"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"complex_key_ssd_cache"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"direct"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"complex_key_direct")," layouts."),(0,r.kt)("p",null,"Executable pool will spawn pool of processes with specified command and keep them running until they exit. The program should read data from STDIN while it is available and output result to STDOUT, and it can wait for next block of data on STDIN. ClickHouse will not close STDIN after processing a block of data but will pipe another chunk of data when needed. The executable script should be ready for this way of data processing \u2014 it should poll STDIN and flush data to STDOUT early."),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<source>\n    <executable_pool>\n        <command><command>while read key; do printf "$key\\tData for key $key\\n"; done</command</command>\n        <format>TabSeparated</format>\n        <pool_size>10</pool_size>\n        <max_command_execution_time>10<max_command_execution_time>\n        <implicit_key>false</implicit_key>\n    </executable_pool>\n</source>\n')),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command")," \u2014 The absolute path to the executable file, or the file name (if the program directory is written to ",(0,r.kt)("inlineCode",{parentName:"li"},"PATH"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"format")," \u2014 The file format. All the formats described in \u201c",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/interfaces/formats#formats"},"Formats"),"\u201d are supported."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pool_size")," \u2014 Size of pool. If 0 is specified as ",(0,r.kt)("inlineCode",{parentName:"li"},"pool_size")," then there is no pool size restrictions. Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"16"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command_termination_timeout")," \u2014 executable script should contain main read-write loop. After dictionary is destroyed, pipe is closed, and executable file will have ",(0,r.kt)("inlineCode",{parentName:"li"},"command_termination_timeout")," seconds to shutdown, before ClickHouse will send SIGTERM signal to child process. Specified in seconds. Default value is 10. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_command_execution_time")," \u2014 Maximum executable script command execution time for processing block of data. Specified in seconds. Default value is 10. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command_read_timeout")," - timeout for reading data from command stdout in milliseconds. Default value 10000. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command_write_timeout")," - timeout for writing data to command stdin in milliseconds. Default value 10000. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"implicit_key")," \u2014 The executable source file can return only values, and the correspondence to the requested keys is determined implicitly \u2014 by the order of rows in the result. Default value is false. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"execute_direct")," - If ",(0,r.kt)("inlineCode",{parentName:"li"},"execute_direct")," = ",(0,r.kt)("inlineCode",{parentName:"li"},"1"),", then ",(0,r.kt)("inlineCode",{parentName:"li"},"command")," will be searched inside user_scripts folder. Additional script arguments can be specified using whitespace separator. Example: ",(0,r.kt)("inlineCode",{parentName:"li"},"script_name arg1 arg2"),". If ",(0,r.kt)("inlineCode",{parentName:"li"},"execute_direct")," = ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"command")," is passed as argument for ",(0,r.kt)("inlineCode",{parentName:"li"},"bin/sh -c"),". Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"1"),". Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"send_chunk_header")," - controls whether to send row count before sending a chunk of data to process. Optional. Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),".")),(0,r.kt)("p",null,"That dictionary source can be configured only via XML configuration. Creating dictionaries with executable source via DDL is disabled, otherwise, the DB user would be able to execute arbitrary binary on ClickHouse node."),(0,r.kt)("h2",{id:"dicts-external_dicts_dict_sources-http"},"Http(s)"),(0,r.kt)("p",null,"Working with an HTTP(s) server depends on ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout"},"how the dictionary is stored in memory"),". If the dictionary is stored using ",(0,r.kt)("inlineCode",{parentName:"p"},"cache")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"complex_key_cache"),", ClickHouse requests the necessary keys by sending a request via the ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," method."),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n    <http>\n        <url>http://[::1]/os.tsv</url>\n        <format>TabSeparated</format>\n        <credentials>\n            <user>user</user>\n            <password>password</password>\n        </credentials>\n        <headers>\n            <header>\n                <name>API-KEY</name>\n                <value>key</value>\n            </header>\n        </headers>\n    </http>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(HTTP(\n    url 'http://[::1]/os.tsv'\n    format 'TabSeparated'\n    credentials(user 'user' password 'password')\n    headers(header(name 'API-KEY' value 'key'))\n))\n")),(0,r.kt)("p",null,"In order for ClickHouse to access an HTTPS resource, you must ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-openssl"},"configure openSSL")," in the server configuration."),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url")," \u2013 The source URL."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"format")," \u2013 The file format. All the formats described in \u201c",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/interfaces/formats#formats"},"Formats"),"\u201d are supported."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"credentials")," \u2013 Basic HTTP authentication. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user")," \u2013 Username required for the authentication."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"password")," \u2013 Password required for the authentication."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"headers")," \u2013 All custom HTTP headers entries used for the HTTP request. Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"header")," \u2013 Single HTTP header entry."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," \u2013 Identifiant name used for the header send on the request."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," \u2013 Value set for a specific identifiant name.")),(0,r.kt)("p",null,"When creating a dictionary using the DDL command (",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE DICTIONARY ..."),") remote hosts for HTTP dictionaries are checked against the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"remote_url_allow_hosts")," section from config to prevent database users to access arbitrary HTTP server."),(0,r.kt)("h3",{id:"known-vulnerability-of-the-odbc-dictionary-functionality"},"Known Vulnerability of the ODBC Dictionary Functionality"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"When connecting to the database through the ODBC driver connection parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"Servername")," can be substituted. In this case values of ",(0,r.kt)("inlineCode",{parentName:"p"},"USERNAME")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"PASSWORD")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"odbc.ini")," are sent to the remote server and can be compromised."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example of insecure use")),(0,r.kt)("p",null,"Let\u2019s configure unixODBC for PostgreSQL. Content of ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/odbc.ini"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"[gregtest]\nDriver = /usr/lib/psqlodbca.so\nServername = localhost\nPORT = 5432\nDATABASE = test_db\n#OPTION = 3\nUSERNAME = test\nPASSWORD = test\n")),(0,r.kt)("p",null,"If you then make a query such as"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM odbc('DSN=gregtest;Servername=some-server.com', 'test_db');\n")),(0,r.kt)("p",null,"ODBC driver will send values of ",(0,r.kt)("inlineCode",{parentName:"p"},"USERNAME")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"PASSWORD")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"odbc.ini")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"some-server.com"),"."),(0,r.kt)("h3",{id:"example-of-connecting-postgresql"},"Example of Connecting Postgresql"),(0,r.kt)("p",null,"Ubuntu OS."),(0,r.kt)("p",null,"Installing unixODBC and the ODBC driver for PostgreSQL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt-get install -y unixodbc odbcinst odbc-postgresql\n")),(0,r.kt)("p",null,"Configuring ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/odbc.ini")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.odbc.ini")," if you signed in under a user that runs ClickHouse):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"    [DEFAULT]\n    Driver = myconnection\n\n    [myconnection]\n    Description         = PostgreSQL connection to my_db\n    Driver              = PostgreSQL Unicode\n    Database            = my_db\n    Servername          = 127.0.0.1\n    UserName            = username\n    Password            = password\n    Port                = 5432\n    Protocol            = 9.3\n    ReadOnly            = No\n    RowVersioning       = No\n    ShowSystemTables    = No\n    ConnSettings        =\n")),(0,r.kt)("p",null,"The dictionary configuration in ClickHouse:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<clickhouse>\n    <dictionary>\n        <name>table_name</name>\n        <source>\n            <odbc>\n                \x3c!-- You can specify the following parameters in connection_string: --\x3e\n                \x3c!-- DSN=myconnection;UID=username;PWD=password;HOST=127.0.0.1;PORT=5432;DATABASE=my_db --\x3e\n                <connection_string>DSN=myconnection</connection_string>\n                <table>postgresql_table</table>\n            </odbc>\n        </source>\n        <lifetime>\n            <min>300</min>\n            <max>360</max>\n        </lifetime>\n        <layout>\n            <hashed/>\n        </layout>\n        <structure>\n            <id>\n                <name>id</name>\n            </id>\n            <attribute>\n                <name>some_column</name>\n                <type>UInt64</type>\n                <null_value>0</null_value>\n            </attribute>\n        </structure>\n    </dictionary>\n</clickhouse>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DICTIONARY table_name (\n    id UInt64,\n    some_column UInt64 DEFAULT 0\n)\nPRIMARY KEY id\nSOURCE(ODBC(connection_string 'DSN=myconnection' table 'postgresql_table'))\nLAYOUT(HASHED())\nLIFETIME(MIN 300 MAX 360)\n")),(0,r.kt)("p",null,"You may need to edit ",(0,r.kt)("inlineCode",{parentName:"p"},"odbc.ini")," to specify the full path to the library with the driver ",(0,r.kt)("inlineCode",{parentName:"p"},"DRIVER=/usr/local/lib/psqlodbcw.so"),"."),(0,r.kt)("h3",{id:"example-of-connecting-ms-sql-server"},"Example of Connecting MS SQL Server"),(0,r.kt)("p",null,"Ubuntu OS."),(0,r.kt)("p",null,"Installing the ODBC driver for connecting to MS SQL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt-get install tdsodbc freetds-bin sqsh\n")),(0,r.kt)("p",null,"Configuring the driver:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'    $ cat /etc/freetds/freetds.conf\n    ...\n\n    [MSSQL]\n    host = 192.168.56.101\n    port = 1433\n    tds version = 7.0\n    client charset = UTF-8\n\n    # test TDS connection\n    $ sqsh -S MSSQL -D database -U user -P password\n\n\n    $ cat /etc/odbcinst.ini\n\n    [FreeTDS]\n    Description     = FreeTDS\n    Driver          = /usr/lib/x86_64-linux-gnu/odbc/libtdsodbc.so\n    Setup           = /usr/lib/x86_64-linux-gnu/odbc/libtdsS.so\n    FileUsage       = 1\n    UsageCount      = 5\n\n    $ cat /etc/odbc.ini\n    # $ cat ~/.odbc.ini # if you signed in under a user that runs ClickHouse\n\n    [MSSQL]\n    Description     = FreeTDS\n    Driver          = FreeTDS\n    Servername      = MSSQL\n    Database        = test\n    UID             = test\n    PWD             = test\n    Port            = 1433\n\n\n    # (optional) test ODBC connection (to use isql-tool install the [unixodbc](https://packages.debian.org/sid/unixodbc)-package)\n    $ isql -v MSSQL "user" "password"\n')),(0,r.kt)("p",null,"Remarks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"to determine the earliest TDS version that is supported by a particular SQL Server version, refer to the product documentation or look at ",(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-tds/135d0ebe-5c4c-4a94-99bf-1811eccb9f4a"},"MS-TDS Product Behavior"))),(0,r.kt)("p",null,"Configuring the dictionary in ClickHouse:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<clickhouse>\n    <dictionary>\n        <name>test</name>\n        <source>\n            <odbc>\n                <table>dict</table>\n                <connection_string>DSN=MSSQL;UID=test;PWD=test</connection_string>\n            </odbc>\n        </source>\n\n        <lifetime>\n            <min>300</min>\n            <max>360</max>\n        </lifetime>\n\n        <layout>\n            <flat />\n        </layout>\n\n        <structure>\n            <id>\n                <name>k</name>\n            </id>\n            <attribute>\n                <name>s</name>\n                <type>String</type>\n                <null_value></null_value>\n            </attribute>\n        </structure>\n    </dictionary>\n</clickhouse>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DICTIONARY test (\n    k UInt64,\n    s String DEFAULT ''\n)\nPRIMARY KEY k\nSOURCE(ODBC(table 'dict' connection_string 'DSN=MSSQL;UID=test;PWD=test'))\nLAYOUT(FLAT())\nLIFETIME(MIN 300 MAX 360)\n")),(0,r.kt)("h2",{id:"dbms"},"DBMS"),(0,r.kt)("h3",{id:"dicts-external_dicts_dict_sources-odbc"},"ODBC"),(0,r.kt)("p",null,"You can use this method to connect any database that has an ODBC driver."),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n    <odbc>\n        <db>DatabaseName</db>\n        <table>ShemaName.TableName</table>\n        <connection_string>DSN=some_parameters</connection_string>\n        <invalidate_query>SQL_QUERY</invalidate_query>\n        <query>SELECT id, value_1, value_2 FROM ShemaName.TableName</query>\n    </odbc>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(ODBC(\n    db 'DatabaseName'\n    table 'SchemaName.TableName'\n    connection_string 'DSN=some_parameters'\n    invalidate_query 'SQL_QUERY'\n    query 'SELECT id, value_1, value_2 FROM db_name.table_name'\n))\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"db")," \u2013 Name of the database. Omit it if the database name is set in the ",(0,r.kt)("inlineCode",{parentName:"li"},"<connection_string>")," parameters."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"table")," \u2013 Name of the table and schema if exists."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"connection_string")," \u2013 Connection string."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"invalidate_query")," \u2013 Query for checking the dictionary status. Optional parameter. Read more in the section ",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime"},"Updating dictionaries"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"query")," \u2013 The custom query. Optional parameter.")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," fields cannot be used together. And either one of the ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," fields must be declared."))),(0,r.kt)("p",null,"ClickHouse receives quoting symbols from ODBC-driver and quote all settings in queries to driver, so it\u2019s necessary to set table name accordingly to table name case in database."),(0,r.kt)("p",null,"If you have a problems with encodings when using Oracle, see the corresponding ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/faq/integration/oracle-odbc"},"FAQ")," item."),(0,r.kt)("h3",{id:"dicts-external_dicts_dict_sources-mysql"},"Mysql"),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n  <mysql>\n      <port>3306</port>\n      <user>clickhouse</user>\n      <password>qwerty</password>\n      <replica>\n          <host>example01-1</host>\n          <priority>1</priority>\n      </replica>\n      <replica>\n          <host>example01-2</host>\n          <priority>1</priority>\n      </replica>\n      <db>db_name</db>\n      <table>table_name</table>\n      <where>id=10</where>\n      <invalidate_query>SQL_QUERY</invalidate_query>\n      <fail_on_connection_loss>true</fail_on_connection_loss>\n      <query>SELECT id, value_1, value_2 FROM db_name.table_name</query>\n  </mysql>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(MYSQL(\n    port 3306\n    user 'clickhouse'\n    password 'qwerty'\n    replica(host 'example01-1' priority 1)\n    replica(host 'example01-2' priority 1)\n    db 'db_name'\n    table 'table_name'\n    where 'id=10'\n    invalidate_query 'SQL_QUERY'\n    fail_on_connection_loss 'true'\n    query 'SELECT id, value_1, value_2 FROM db_name.table_name'\n))\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"port")," \u2013 The port on the MySQL server. You can specify it for all replicas, or for each one individually (inside ",(0,r.kt)("inlineCode",{parentName:"p"},"<replica>"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"user")," \u2013 Name of the MySQL user. You can specify it for all replicas, or for each one individually (inside ",(0,r.kt)("inlineCode",{parentName:"p"},"<replica>"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"password")," \u2013 Password of the MySQL user. You can specify it for all replicas, or for each one individually (inside ",(0,r.kt)("inlineCode",{parentName:"p"},"<replica>"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"replica")," \u2013 Section of replica configurations. There can be multiple sections."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"- `replica/host` \u2013 The MySQL host.\n- `replica/priority` \u2013 The replica priority. When attempting to connect, ClickHouse traverses the replicas in order of priority. The lower the number, the higher the priority.\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"db")," \u2013 Name of the database.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"table")," \u2013 Name of the table.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"where")," \u2013 The selection criteria. The syntax for conditions is the same as for ",(0,r.kt)("inlineCode",{parentName:"p"},"WHERE")," clause in MySQL, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"id > 10 AND id < 20"),". Optional parameter.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"invalidate_query")," \u2013 Query for checking the dictionary status. Optional parameter. Read more in the section ",(0,r.kt)("a",{parentName:"p",href:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime"},"Updating dictionaries"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"fail_on_connection_loss")," \u2013 The configuration parameter that controls behavior of the server on connection loss. If ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", an exception is thrown immediately if the connection between client and server was lost. If ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", the ClickHouse server retries to execute the query three times before throwing an exception. Note that retrying leads to increased response times. Default value: ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"query")," \u2013 The custom query. Optional parameter."))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"where")," fields cannot be used together with the ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," field. And either one of the ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," fields must be declared."))),(0,r.kt)("p",null,"MySQL can be connected on a local host via sockets. To do this, set ",(0,r.kt)("inlineCode",{parentName:"p"},"host")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"socket"),"."),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n  <mysql>\n      <host>localhost</host>\n      <socket>/path/to/socket/file.sock</socket>\n      <user>clickhouse</user>\n      <password>qwerty</password>\n      <db>db_name</db>\n      <table>table_name</table>\n      <where>id=10</where>\n      <invalidate_query>SQL_QUERY</invalidate_query>\n      <fail_on_connection_loss>true</fail_on_connection_loss>\n      <query>SELECT id, value_1, value_2 FROM db_name.table_name</query>\n  </mysql>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(MYSQL(\n    host 'localhost'\n    socket '/path/to/socket/file.sock'\n    user 'clickhouse'\n    password 'qwerty'\n    db 'db_name'\n    table 'table_name'\n    where 'id=10'\n    invalidate_query 'SQL_QUERY'\n    fail_on_connection_loss 'true'\n    query 'SELECT id, value_1, value_2 FROM db_name.table_name'\n))\n")),(0,r.kt)("h3",{id:"dicts-external_dicts_dict_sources-clickhouse"},"ClickHouse"),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n    <clickhouse>\n        <host>example01-01-1</host>\n        <port>9000</port>\n        <user>default</user>\n        <password></password>\n        <db>default</db>\n        <table>ids</table>\n        <where>id=10</where>\n        <secure>1</secure>\n        <query>SELECT id, value_1, value_2 FROM default.ids</query>\n    </clickhouse>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(CLICKHOUSE(\n    host 'example01-01-1'\n    port 9000\n    user 'default'\n    password ''\n    db 'default'\n    table 'ids'\n    where 'id=10'\n    secure 1\n    query 'SELECT id, value_1, value_2 FROM default.ids'\n));\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"host")," \u2013 The ClickHouse host. If it is a local host, the query is processed without any network activity. To improve fault tolerance, you can create a ",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/engines/table-engines/special/distributed"},"Distributed")," table and enter it in subsequent configurations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"port")," \u2013 The port on the ClickHouse server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user")," \u2013 Name of the ClickHouse user."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"password")," \u2013 Password of the ClickHouse user."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"db")," \u2013 Name of the database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"table")," \u2013 Name of the table."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"where")," \u2013 The selection criteria. May be omitted."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"invalidate_query")," \u2013 Query for checking the dictionary status. Optional parameter. Read more in the section ",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime"},"Updating dictionaries"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"secure")," - Use ssl for connection."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"query")," \u2013 The custom query. Optional parameter.")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"where")," fields cannot be used together with the ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," field. And either one of the ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," fields must be declared."))),(0,r.kt)("h3",{id:"dicts-external_dicts_dict_sources-mongodb"},"Mongodb"),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n    <mongodb>\n        <host>localhost</host>\n        <port>27017</port>\n        <user></user>\n        <password></password>\n        <db>test</db>\n        <collection>dictionary_source</collection>\n    </mongodb>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(MONGODB(\n    host 'localhost'\n    port 27017\n    user ''\n    password ''\n    db 'test'\n    collection 'dictionary_source'\n))\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"host")," \u2013 The MongoDB host."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"port")," \u2013 The port on the MongoDB server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user")," \u2013 Name of the MongoDB user."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"password")," \u2013 Password of the MongoDB user."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"db")," \u2013 Name of the database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"collection")," \u2013 Name of the collection.")),(0,r.kt)("h3",{id:"dicts-external_dicts_dict_sources-redis"},"Redis"),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n    <redis>\n        <host>localhost</host>\n        <port>6379</port>\n        <storage_type>simple</storage_type>\n        <db_index>0</db_index>\n    </redis>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(REDIS(\n    host 'localhost'\n    port 6379\n    storage_type 'simple'\n    db_index 0\n))\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"host")," \u2013 The Redis host."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"port")," \u2013 The port on the Redis server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"storage_type")," \u2013 The structure of internal Redis storage using for work with keys. ",(0,r.kt)("inlineCode",{parentName:"li"},"simple")," is for simple sources and for hashed single key sources, ",(0,r.kt)("inlineCode",{parentName:"li"},"hash_map")," is for hashed sources with two keys. Ranged sources and cache sources with complex key are unsupported. May be omitted, default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"simple"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"db_index")," \u2013 The specific numeric index of Redis logical database. May be omitted, default value is 0.")),(0,r.kt)("h3",{id:"dicts-external_dicts_dict_sources-cassandra"},"Cassandra"),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<source>\n    <cassandra>\n        <host>localhost</host>\n        <port>9042</port>\n        <user>username</user>\n        <password>qwerty123</password>\n        <keyspase>database_name</keyspase>\n        <column_family>table_name</column_family>\n        <allow_filering>1</allow_filering>\n        <partition_key_prefix>1</partition_key_prefix>\n        <consistency>One</consistency>\n        <where>"SomeColumn" = 42</where>\n        <max_threads>8</max_threads>\n        <query>SELECT id, value_1, value_2 FROM database_name.table_name</query>\n    </cassandra>\n</source>\n')),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"host")," \u2013 The Cassandra host or comma-separated list of hosts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"port")," \u2013 The port on the Cassandra servers. If not specified, default port 9042 is used."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user")," \u2013 Name of the Cassandra user."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"password")," \u2013 Password of the Cassandra user."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyspace")," \u2013 Name of the keyspace (database)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"column_family")," \u2013 Name of the column family (table)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"allow_filering")," \u2013 Flag to allow or not potentially expensive conditions on clustering key columns. Default value is 1."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"partition_key_prefix")," \u2013 Number of partition key columns in primary key of the Cassandra table. Required for compose key dictionaries. Order of key columns in the dictionary definition must be the same as in Cassandra. Default value is 1 (the first key column is a partition key and other key columns are clustering key)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"consistency")," \u2013 Consistency level. Possible values: ",(0,r.kt)("inlineCode",{parentName:"li"},"One"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Two"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Three"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"All"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"EachQuorum"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Quorum"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalQuorum"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalOne"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Serial"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalSerial"),". Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"One"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"where")," \u2013 Optional selection criteria."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_threads")," \u2013 The maximum number of threads to use for loading data from multiple partitions in compose key dictionaries."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"query")," \u2013 The custom query. Optional parameter.")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"column_family")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"where")," fields cannot be used together with the ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," field. And either one of the ",(0,r.kt)("inlineCode",{parentName:"p"},"column_family")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," fields must be declared."))),(0,r.kt)("h3",{id:"dicts-external_dicts_dict_sources-postgresql"},"PostgreSQL"),(0,r.kt)("p",null,"Example of settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<source>\n  <postgresql>\n      <port>5432</port>\n      <user>clickhouse</user>\n      <password>qwerty</password>\n      <db>db_name</db>\n      <table>table_name</table>\n      <where>id=10</where>\n      <invalidate_query>SQL_QUERY</invalidate_query>\n      <query>SELECT id, value_1, value_2 FROM db_name.table_name</query>\n  </postgresql>\n</source>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SOURCE(POSTGRESQL(\n    port 5432\n    host 'postgresql-hostname'\n    user 'postgres_user'\n    password 'postgres_password'\n    db 'db_name'\n    table 'table_name'\n    replica(host 'example01-1' port 5432 priority 1)\n    replica(host 'example01-2' port 5432 priority 2)\n    where 'id=10'\n    invalidate_query 'SQL_QUERY'\n    query 'SELECT id, value_1, value_2 FROM db_name.table_name'\n))\n")),(0,r.kt)("p",null,"Setting fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"host")," \u2013 The host on the PostgreSQL server. You can specify it for all replicas, or for each one individually (inside ",(0,r.kt)("inlineCode",{parentName:"li"},"<replica>"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"port")," \u2013 The port on the PostgreSQL server. You can specify it for all replicas, or for each one individually (inside ",(0,r.kt)("inlineCode",{parentName:"li"},"<replica>"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user")," \u2013 Name of the PostgreSQL user. You can specify it for all replicas, or for each one individually (inside ",(0,r.kt)("inlineCode",{parentName:"li"},"<replica>"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"password")," \u2013 Password of the PostgreSQL user. You can specify it for all replicas, or for each one individually (inside ",(0,r.kt)("inlineCode",{parentName:"li"},"<replica>"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"replica")," \u2013 Section of replica configurations. There can be multiple sections:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"replica/host")," \u2013 The PostgreSQL host."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"replica/port")," \u2013 The PostgreSQL port."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"replica/priority")," \u2013 The replica priority. When attempting to connect, ClickHouse traverses the replicas in order of priority. The lower the number, the higher the priority."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"db")," \u2013 Name of the database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"table")," \u2013 Name of the table."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"where")," \u2013 The selection criteria. The syntax for conditions is the same as for ",(0,r.kt)("inlineCode",{parentName:"li"},"WHERE")," clause in PostgreSQL. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"id > 10 AND id < 20"),". Optional parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"invalidate_query")," \u2013 Query for checking the dictionary status. Optional parameter. Read more in the section ",(0,r.kt)("a",{parentName:"li",href:"/docs/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime"},"Updating dictionaries"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"query")," \u2013 The custom query. Optional parameter.")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"where")," fields cannot be used together with the ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," field. And either one of the ",(0,r.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," fields must be declared."))))}u.isMDXComponent=!0}}]);