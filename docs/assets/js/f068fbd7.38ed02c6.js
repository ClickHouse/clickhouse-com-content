"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[52213],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(u,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(f,l(l({ref:t},p),{},{components:n})):a.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},38222:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],o={sidebar_position:146,sidebar_label:"intervalLengthSum"},u="intervalLengthSum",s={unversionedId:"en/sql-reference/aggregate-functions/reference/intervalLengthSum",id:"en/sql-reference/aggregate-functions/reference/intervalLengthSum",title:"intervalLengthSum",description:"agg_function-intervallengthsum}",source:"@site/docs/en/sql-reference/aggregate-functions/reference/intervalLengthSum.md",sourceDirName:"en/sql-reference/aggregate-functions/reference",slug:"/en/sql-reference/aggregate-functions/reference/intervalLengthSum",permalink:"/docs/en/sql-reference/aggregate-functions/reference/intervalLengthSum",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/aggregate-functions/reference/intervalLengthSum.md",tags:[],version:"current",sidebarPosition:146,frontMatter:{sidebar_position:146,sidebar_label:"intervalLengthSum"},sidebar:"tutorialSidebar",previous:{title:"sumKahan",permalink:"/docs/en/sql-reference/aggregate-functions/reference/sumkahan"},next:{title:"skewPop",permalink:"/docs/en/sql-reference/aggregate-functions/reference/skewpop"}},p={},c=[],m={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"agg_function-intervallengthsum"},"intervalLengthSum"),(0,i.kt)("p",null,"Calculates the total length of union of all ranges (segments on numeric axis)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"intervalLengthSum(start, end)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"start")," \u2014 The starting value of the interval. ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"Int32"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"Int64"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"UInt32"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"UInt64"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/float#float32-float64"},"Float32"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/float#float32-float64"},"Float64"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/datetime#data_type-datetime"},"DateTime")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/date#data_type-date"},"Date"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"end")," \u2014 The ending value of the interval. ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"Int32"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"Int64"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"UInt32"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"UInt64"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/float#float32-float64"},"Float32"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/float#float32-float64"},"Float64"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/datetime#data_type-datetime"},"DateTime")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/date#data_type-date"},"Date"),".")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Arguments must be of the same data type. Otherwise, an exception will be thrown."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returned value")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Total length of union of all ranges (segments on numeric axis). Depending on the type of the argument, the return value may be ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint#uint8-uint16-uint32-uint64-int8-int16-int32-int64"},"UInt64")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/float#float32-float64"},"Float64")," type.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Examples")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Input table:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500id\u2500\u252c\u2500start\u2500\u252c\u2500end\u2500\u2510\n\u2502 a  \u2502   1.1 \u2502 2.9 \u2502\n\u2502 a  \u2502   2.5 \u2502 3.2 \u2502\n\u2502 a  \u2502     4 \u2502   5 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("p",null,"In this example, the arguments of the Float32 type are used. The function returns a value of the Float64 type."),(0,i.kt)("p",null,"Result is the sum of lengths of intervals ",(0,i.kt)("inlineCode",{parentName:"p"},"[1.1, 3.2]")," (union of ",(0,i.kt)("inlineCode",{parentName:"p"},"[1.1, 2.9]")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"[2.5, 3.2]"),") and ",(0,i.kt)("inlineCode",{parentName:"p"},"[4, 5]")),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, intervalLengthSum(start, end), toTypeName(intervalLengthSum(start, end)) FROM fl_interval GROUP BY id ORDER BY id;\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500id\u2500\u252c\u2500intervalLengthSum(start, end)\u2500\u252c\u2500toTypeName(intervalLengthSum(start, end))\u2500\u2510\n\u2502 a  \u2502                           3.1 \u2502 Float64                                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Input table:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500id\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500start\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500end\u2500\u2510\n\u2502 a  \u2502 2020-01-01 01:12:30 \u2502 2020-01-01 02:10:10 \u2502\n\u2502 a  \u2502 2020-01-01 02:05:30 \u2502 2020-01-01 02:50:31 \u2502\n\u2502 a  \u2502 2020-01-01 03:11:22 \u2502 2020-01-01 03:23:31 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("p",null,"In this example, the arguments of the DateTime type are used. The function returns a value in seconds."),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, intervalLengthSum(start, end), toTypeName(intervalLengthSum(start, end)) FROM dt_interval GROUP BY id ORDER BY id;\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500id\u2500\u252c\u2500intervalLengthSum(start, end)\u2500\u252c\u2500toTypeName(intervalLengthSum(start, end))\u2500\u2510\n\u2502 a  \u2502                          6610 \u2502 UInt64                                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Input table:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500id\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500start\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500end\u2500\u2510\n\u2502 a  \u2502 2020-01-01 \u2502 2020-01-04 \u2502\n\u2502 a  \u2502 2020-01-12 \u2502 2020-01-18 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("p",null,"In this example, the arguments of the Date type are used. The function returns a value in days."),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, intervalLengthSum(start, end), toTypeName(intervalLengthSum(start, end)) FROM date_interval GROUP BY id ORDER BY id;\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500id\u2500\u252c\u2500intervalLengthSum(start, end)\u2500\u252c\u2500toTypeName(intervalLengthSum(start, end))\u2500\u2510\n\u2502 a  \u2502                             9 \u2502 UInt64                                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}d.isMDXComponent=!0}}]);