"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[31922],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(t),d=o,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},12972:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],s={sidebar_position:62,sidebar_label:"Constraints on Settings"},l="Constraints on Settings",c={unversionedId:"en/operations/settings/constraints-on-settings",id:"en/operations/settings/constraints-on-settings",title:"Constraints on Settings",description:"constraints-on-settings}",source:"@site/docs/en/operations/settings/constraints-on-settings.md",sourceDirName:"en/operations/settings",slug:"/en/operations/settings/constraints-on-settings",permalink:"/docs/staging6/docs/en/operations/settings/constraints-on-settings",tags:[],version:"current",sidebarPosition:62,frontMatter:{sidebar_position:62,sidebar_label:"Constraints on Settings"},sidebar:"tutorialSidebar",previous:{title:"Settings Profiles",permalink:"/docs/staging6/docs/en/operations/settings/settings-profiles"},next:{title:"User Settings",permalink:"/docs/staging6/docs/en/operations/settings/settings-users"}},p={},u=[],m={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"constraints-on-settings"},"Constraints on Settings"),(0,a.kt)("p",null,"The constraints on settings can be defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"profiles")," section of the ",(0,a.kt)("inlineCode",{parentName:"p"},"user.xml")," configuration file and prohibit users from changing some of the settings with the ",(0,a.kt)("inlineCode",{parentName:"p"},"SET")," query.\nThe constraints are defined as the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<profiles>\n  <user_name>\n    <constraints>\n      <setting_name_1>\n        <min>lower_boundary</min>\n      </setting_name_1>\n      <setting_name_2>\n        <max>upper_boundary</max>\n      </setting_name_2>\n      <setting_name_3>\n        <min>lower_boundary</min>\n        <max>upper_boundary</max>\n      </setting_name_3>\n      <setting_name_4>\n        <readonly/>\n      </setting_name_4>\n    </constraints>\n  </user_name>\n</profiles>\n")),(0,a.kt)("p",null,"If the user tries to violate the constraints an exception is thrown and the setting isn\u2019t changed.\nThere are supported three types of constraints: ",(0,a.kt)("inlineCode",{parentName:"p"},"min"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"max"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"readonly"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"min")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"max")," constraints specify upper and lower boundaries for a numeric setting and can be used in combination. The ",(0,a.kt)("inlineCode",{parentName:"p"},"readonly")," constraint specifies that the user cannot change the corresponding setting at all."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")," Let ",(0,a.kt)("inlineCode",{parentName:"p"},"users.xml")," includes lines:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<profiles>\n  <default>\n    <max_memory_usage>10000000000</max_memory_usage>\n    <force_index_by_date>0</force_index_by_date>\n    ...\n    <constraints>\n      <max_memory_usage>\n        <min>5000000000</min>\n        <max>20000000000</max>\n      </max_memory_usage>\n      <force_index_by_date>\n        <readonly/>\n      </force_index_by_date>\n    </constraints>\n  </default>\n</profiles>\n")),(0,a.kt)("p",null,"The following queries all throw exceptions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SET max_memory_usage=20000000001;\nSET max_memory_usage=4999999999;\nSET force_index_by_date=1;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"Code: 452, e.displayText() = DB::Exception: Setting max_memory_usage should not be greater than 20000000000.\nCode: 452, e.displayText() = DB::Exception: Setting max_memory_usage should not be less than 5000000000.\nCode: 452, e.displayText() = DB::Exception: Setting force_index_by_date should not be changed.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," profile has special handling: all the constraints defined for the ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," profile become the default constraints, so they restrict all the users until they\u2019re overridden explicitly for these users."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/operations/settings/constraints_on_settings/"},"Original article")," "))}d.isMDXComponent=!0}}]);