"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[40724],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return d}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},o=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,u=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=l,f=m["".concat(u,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(f,r(r({ref:t},o),{},{components:n})):a.createElement(f,r({ref:t},o))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},39836:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var a=n(87462),l=n(63366),i=(n(67294),n(3905)),r=["components"],s={sidebar_position:202},u="quantileExact Functions",p={unversionedId:"en/sql-reference/aggregate-functions/reference/quantileexact",id:"en/sql-reference/aggregate-functions/reference/quantileexact",title:"quantileExact Functions",description:"quantileexact-functions}",source:"@site/docs/en/sql-reference/aggregate-functions/reference/quantileexact.md",sourceDirName:"en/sql-reference/aggregate-functions/reference",slug:"/en/sql-reference/aggregate-functions/reference/quantileexact",permalink:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantileexact",tags:[],version:"current",sidebarPosition:202,frontMatter:{sidebar_position:202},sidebar:"tutorialSidebar",previous:{title:"quantiles Functions",permalink:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantiles"},next:{title:"quantileExactWeighted",permalink:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantileexactweighted"}},o={},c=[{value:"quantileExact",id:"quantileexact",level:2},{value:"quantileExactLow",id:"quantileexactlow",level:2},{value:"quantileExactHigh",id:"quantileexacthigh",level:2},{value:"quantileExactExclusive",id:"quantileexactexclusive",level:2},{value:"quantileExactInclusive",id:"quantileexactinclusive",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quantileexact-functions"},"quantileExact Functions"),(0,i.kt)("h2",{id:"quantileexact"},"quantileExact"),(0,i.kt)("p",null,"Exactly computes the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Quantile"},"quantile")," of a numeric data sequence."),(0,i.kt)("p",null,"To get exact value, all the passed values \u200b\u200bare combined into an array, which is then partially sorted. Therefore, the function consumes ",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")," memory, where ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is a number of values that were passed. However, for a small number of values, the function is very effective."),(0,i.kt)("p",null,"When using multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"quantile*")," functions with different levels in a query, the internal states are not combined (that is, the query works less efficiently than it could). In this case, use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantiles#quantiles"},"quantiles")," function."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"quantileExact(level)(expr)\n")),(0,i.kt)("p",null,"Alias: ",(0,i.kt)("inlineCode",{parentName:"p"},"medianExact"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"level")," \u2014 Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a ",(0,i.kt)("inlineCode",{parentName:"li"},"level")," value in the range of ",(0,i.kt)("inlineCode",{parentName:"li"},"[0.01, 0.99]"),". Default value: 0.5. At ",(0,i.kt)("inlineCode",{parentName:"li"},"level=0.5")," the function calculates ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Median"},"median"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expr")," \u2014 Expression over the column values resulting in numeric ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/#data_types"},"data types"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returned value")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Quantile of the specified level.")),(0,i.kt)("p",null,"Type:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/float"},"Float64")," for numeric data type input."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"Date")," type."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"DateTime")," type.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT quantileExact(number) FROM numbers(10)\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500quantileExact(number)\u2500\u2510\n\u2502                     5 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("h2",{id:"quantileexactlow"},"quantileExactLow"),(0,i.kt)("p",null,"Similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"quantileExact"),", this computes the exact ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Quantile"},"quantile")," of a numeric data sequence."),(0,i.kt)("p",null,"To get the exact value, all the passed values are combined into an array, which is then fully sorted.  The sorting ",(0,i.kt)("a",{parentName:"p",href:"https://en.cppreference.com/w/cpp/algorithm/sort"},"algorithm's")," complexity is ",(0,i.kt)("inlineCode",{parentName:"p"},"O(N\xb7log(N))"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"N = std::distance(first, last)")," comparisons."),(0,i.kt)("p",null,"The return value depends on the quantile level and the number of elements in the selection, i.e. if the level is 0.5, then the function returns the lower median value for an even number of elements and the middle median value for an odd number of elements. Median is calculated similarly to the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/statistics.html#statistics.median_low"},"median_low")," implementation which is used in python."),(0,i.kt)("p",null,"For all other levels, the element at the index corresponding to the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"level * size_of_array")," is returned. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT quantileExactLow(0.1)(number) FROM numbers(10)\n\n\u250c\u2500quantileExactLow(0.1)(number)\u2500\u2510\n\u2502                             1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("p",null,"When using multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"quantile*")," functions with different levels in a query, the internal states are not combined (that is, the query works less efficiently than it could). In this case, use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantiles#quantiles"},"quantiles")," function."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"quantileExactLow(level)(expr)\n")),(0,i.kt)("p",null,"Alias: ",(0,i.kt)("inlineCode",{parentName:"p"},"medianExactLow"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"level")," \u2014 Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a ",(0,i.kt)("inlineCode",{parentName:"li"},"level")," value in the range of ",(0,i.kt)("inlineCode",{parentName:"li"},"[0.01, 0.99]"),". Default value: 0.5. At ",(0,i.kt)("inlineCode",{parentName:"li"},"level=0.5")," the function calculates ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Median"},"median"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expr")," \u2014 Expression over the column values resulting in numeric ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/#data_types"},"data types"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returned value")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Quantile of the specified level.")),(0,i.kt)("p",null,"Type:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/float"},"Float64")," for numeric data type input."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"Date")," type."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"DateTime")," type.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT quantileExactLow(number) FROM numbers(10)\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500quantileExactLow(number)\u2500\u2510\n\u2502                        4 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("h2",{id:"quantileexacthigh"},"quantileExactHigh"),(0,i.kt)("p",null,"Similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"quantileExact"),", this computes the exact ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Quantile"},"quantile")," of a numeric data sequence."),(0,i.kt)("p",null,"All the passed values are combined into an array, which is then fully sorted, to get the exact value.  The sorting ",(0,i.kt)("a",{parentName:"p",href:"https://en.cppreference.com/w/cpp/algorithm/sort"},"algorithm's")," complexity is ",(0,i.kt)("inlineCode",{parentName:"p"},"O(N\xb7log(N))"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"N = std::distance(first, last)")," comparisons."),(0,i.kt)("p",null,"The return value depends on the quantile level and the number of elements in the selection, i.e. if the level is 0.5, then the function returns the higher median value for an even number of elements and the middle median value for an odd number of elements. Median is calculated similarly to the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/statistics.html#statistics.median_high"},"median_high")," implementation which is used in python. For all other levels, the element at the index corresponding to the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"level * size_of_array")," is returned."),(0,i.kt)("p",null,"This implementation behaves exactly similar to the current ",(0,i.kt)("inlineCode",{parentName:"p"},"quantileExact")," implementation."),(0,i.kt)("p",null,"When using multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"quantile*")," functions with different levels in a query, the internal states are not combined (that is, the query works less efficiently than it could). In this case, use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantiles#quantiles"},"quantiles")," function."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"quantileExactHigh(level)(expr)\n")),(0,i.kt)("p",null,"Alias: ",(0,i.kt)("inlineCode",{parentName:"p"},"medianExactHigh"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"level")," \u2014 Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a ",(0,i.kt)("inlineCode",{parentName:"li"},"level")," value in the range of ",(0,i.kt)("inlineCode",{parentName:"li"},"[0.01, 0.99]"),". Default value: 0.5. At ",(0,i.kt)("inlineCode",{parentName:"li"},"level=0.5")," the function calculates ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Median"},"median"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expr")," \u2014 Expression over the column values resulting in numeric ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/#data_types"},"data types"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returned value")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Quantile of the specified level.")),(0,i.kt)("p",null,"Type:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/float"},"Float64")," for numeric data type input."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"Date")," type."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"DateTime")," type.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT quantileExactHigh(number) FROM numbers(10)\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500quantileExactHigh(number)\u2500\u2510\n\u2502                         5 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("h2",{id:"quantileexactexclusive"},"quantileExactExclusive"),(0,i.kt)("p",null,"Exactly computes the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Quantile"},"quantile")," of a numeric data sequence."),(0,i.kt)("p",null,"To get exact value, all the passed values \u200b\u200bare combined into an array, which is then partially sorted. Therefore, the function consumes ",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")," memory, where ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is a number of values that were passed. However, for a small number of values, the function is very effective."),(0,i.kt)("p",null,"This function is equivalent to ",(0,i.kt)("a",{parentName:"p",href:"https://support.microsoft.com/en-us/office/percentile-exc-function-bbaa7204-e9e1-4010-85bf-c31dc5dce4ba"},"PERCENTILE.EXC")," Excel function, (",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Quantile#Estimating_quantiles_from_a_sample"},"type R6"),")."),(0,i.kt)("p",null,"When using multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"quantileExactExclusive")," functions with different levels in a query, the internal states are not combined (that is, the query works less efficiently than it could). In this case, use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantiles#quantilesexactexclusive"},"quantilesExactExclusive")," function."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"quantileExactExclusive(level)(expr)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expr")," \u2014 Expression over the column values resulting in numeric ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/#data_types"},"data types"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"level")," \u2014 Level of quantile. Optional. Possible values: (0, 1) \u2014 bounds not included. Default value: 0.5. At ",(0,i.kt)("inlineCode",{parentName:"li"},"level=0.5")," the function calculates ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Median"},"median"),". ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/float"},"Float"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returned value")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Quantile of the specified level.")),(0,i.kt)("p",null,"Type:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/float"},"Float64")," for numeric data type input."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"Date")," type."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"DateTime")," type.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE num AS numbers(1000);\n\nSELECT quantileExactExclusive(0.6)(x) FROM (SELECT number AS x FROM num);\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500quantileExactExclusive(0.6)(x)\u2500\u2510\n\u2502                          599.6 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("h2",{id:"quantileexactinclusive"},"quantileExactInclusive"),(0,i.kt)("p",null,"Exactly computes the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Quantile"},"quantile")," of a numeric data sequence."),(0,i.kt)("p",null,"To get exact value, all the passed values \u200b\u200bare combined into an array, which is then partially sorted. Therefore, the function consumes ",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")," memory, where ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is a number of values that were passed. However, for a small number of values, the function is very effective."),(0,i.kt)("p",null,"This function is equivalent to ",(0,i.kt)("a",{parentName:"p",href:"https://support.microsoft.com/en-us/office/percentile-inc-function-680f9539-45eb-410b-9a5e-c1355e5fe2ed"},"PERCENTILE.INC")," Excel function, (",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Quantile#Estimating_quantiles_from_a_sample"},"type R7"),")."),(0,i.kt)("p",null,"When using multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"quantileExactInclusive")," functions with different levels in a query, the internal states are not combined (that is, the query works less efficiently than it could). In this case, use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantiles#quantilesexactinclusive"},"quantilesExactInclusive")," function."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"quantileExactInclusive(level)(expr)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expr")," \u2014 Expression over the column values resulting in numeric ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/#data_types"},"data types"),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"level")," \u2014 Level of quantile. Optional. Possible values: ","[0, 1]"," \u2014 bounds included. Default value: 0.5. At ",(0,i.kt)("inlineCode",{parentName:"li"},"level=0.5")," the function calculates ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Median"},"median"),". ",(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/float"},"Float"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returned value")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Quantile of the specified level.")),(0,i.kt)("p",null,"Type:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/float"},"Float64")," for numeric data type input."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/date"},"Date")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"Date")," type."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/data-types/datetime"},"DateTime")," if input values have the ",(0,i.kt)("inlineCode",{parentName:"li"},"DateTime")," type.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE num AS numbers(1000);\n\nSELECT quantileExactInclusive(0.6)(x) FROM (SELECT number AS x FROM num);\n")),(0,i.kt)("p",null,"Result:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500quantileExactInclusive(0.6)(x)\u2500\u2510\n\u2502                          599.4 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"See Also")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/median#median"},"median")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/staging6/docs/en/sql-reference/aggregate-functions/reference/quantiles#quantiles"},"quantiles"))))}d.isMDXComponent=!0}}]);