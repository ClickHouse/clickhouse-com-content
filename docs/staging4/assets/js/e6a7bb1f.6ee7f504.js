"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[41715],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=i,f=d["".concat(o,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(f,s(s({ref:t},p),{},{components:n})):a.createElement(f,s({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},709:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),s=["components"],l={},o="columns",c={unversionedId:"en/operations/system-tables/columns",id:"en/operations/system-tables/columns",title:"columns",description:"system-columns}",source:"@site/docs/en/operations/system-tables/columns.md",sourceDirName:"en/operations/system-tables",slug:"/en/operations/system-tables/columns",permalink:"/docs/staging4/docs/en/operations/system-tables/columns",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"clusters",permalink:"/docs/staging4/docs/en/operations/system-tables/clusters"},next:{title:"contributors",permalink:"/docs/staging4/docs/en/operations/system-tables/contributors"}},p={},m=[],d={toc:m};function u(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"system-columns"},"columns"),(0,r.kt)("p",null,"Contains information about columns in all the tables."),(0,r.kt)("p",null,"You can use this table to get information similar to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/statements/misc#misc-describe-table"},"DESCRIBE TABLE")," query, but for multiple tables at once."),(0,r.kt)("p",null,"Columns from ",(0,r.kt)("a",{parentName:"p",href:"/docs/staging4/docs/en/sql-reference/statements/create/table#temporary-tables"},"temporary tables")," are visible in the ",(0,r.kt)("inlineCode",{parentName:"p"},"system.columns")," only in those session where they have been created. They are shown with the empty ",(0,r.kt)("inlineCode",{parentName:"p"},"database")," field."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"system.columns")," table contains the following columns (the column type is shown in brackets):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"database")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Database name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"table")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Table name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Column name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Column type."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"position")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Ordinal position of a column in a table starting with 1."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default_kind")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Expression type (",(0,r.kt)("inlineCode",{parentName:"li"},"DEFAULT"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"MATERIALIZED"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ALIAS"),") for the default value, or an empty string if it is not defined."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default_expression")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Expression for the default value, or an empty string if it is not defined."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data_compressed_bytes")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 The size of compressed data, in bytes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data_uncompressed_bytes")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 The size of decompressed data, in bytes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"marks_bytes")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 The size of marks, in bytes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"comment")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Comment on the column, or an empty string if it is not defined."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"is_in_partition_key")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt8"),") \u2014 Flag that indicates whether the column is in the partition expression."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"is_in_sorting_key")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt8"),") \u2014 Flag that indicates whether the column is in the sorting key expression."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"is_in_primary_key")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt8"),") \u2014 Flag that indicates whether the column is in the primary key expression."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"is_in_sampling_key")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt8"),") \u2014 Flag that indicates whether the column is in the sampling key expression."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"compression_codec")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/string"},"String"),") \u2014 Compression codec name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"character_octet_length")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/nullable"},"Nullable"),"(",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),")) \u2014 Maximum length in bytes for binary data, character data, or text data and images. In ClickHouse makes sense only for ",(0,r.kt)("inlineCode",{parentName:"li"},"FixedString")," data type. Otherwise, the ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL")," value is returned."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"numeric_precision")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/nullable"},"Nullable"),"(",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),")) \u2014 Accuracy of approximate numeric data, exact numeric data, integer data, or monetary data. In ClickHouse it is bitness for integer types and decimal precision for ",(0,r.kt)("inlineCode",{parentName:"li"},"Decimal")," types. Otherwise, the ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL")," value is returned."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"numeric_precision_radix")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/nullable"},"Nullable"),"(",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),")) \u2014 The base of the number system is the accuracy of approximate numeric data, exact numeric data, integer data or monetary data. In ClickHouse it's 2 for integer types and 10 for ",(0,r.kt)("inlineCode",{parentName:"li"},"Decimal")," types. Otherwise, the ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL")," value is returned."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"numeric_scale")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/nullable"},"Nullable"),"(",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),")) \u2014 The scale of approximate numeric data, exact numeric data, integer data, or monetary data. In ClickHouse makes sense only for ",(0,r.kt)("inlineCode",{parentName:"li"},"Decimal")," types. Otherwise, the ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL")," value is returned."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"datetime_precision")," (",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/nullable"},"Nullable"),"(",(0,r.kt)("a",{parentName:"li",href:"/docs/staging4/docs/en/sql-reference/data-types/int-uint"},"UInt64"),")) \u2014 Decimal precision of ",(0,r.kt)("inlineCode",{parentName:"li"},"DateTime64")," data type. For other data types, the ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL")," value is returned.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.columns LIMIT 2 FORMAT Vertical;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\ndatabase:                INFORMATION_SCHEMA\ntable:                   COLUMNS\nname:                    table_catalog\ntype:                    String\nposition:                1\ndefault_kind:\ndefault_expression:\ndata_compressed_bytes:   0\ndata_uncompressed_bytes: 0\nmarks_bytes:             0\ncomment:\nis_in_partition_key:     0\nis_in_sorting_key:       0\nis_in_primary_key:       0\nis_in_sampling_key:      0\ncompression_codec:\ncharacter_octet_length:  \u1d3a\u1d41\u1d38\u1d38\nnumeric_precision:       \u1d3a\u1d41\u1d38\u1d38\nnumeric_precision_radix: \u1d3a\u1d41\u1d38\u1d38\nnumeric_scale:           \u1d3a\u1d41\u1d38\u1d38\ndatetime_precision:      \u1d3a\u1d41\u1d38\u1d38\n\nRow 2:\n\u2500\u2500\u2500\u2500\u2500\u2500\ndatabase:                INFORMATION_SCHEMA\ntable:                   COLUMNS\nname:                    table_schema\ntype:                    String\nposition:                2\ndefault_kind:\ndefault_expression:\ndata_compressed_bytes:   0\ndata_uncompressed_bytes: 0\nmarks_bytes:             0\ncomment:\nis_in_partition_key:     0\nis_in_sorting_key:       0\nis_in_primary_key:       0\nis_in_sampling_key:      0\ncompression_codec:\ncharacter_octet_length:  \u1d3a\u1d41\u1d38\u1d38\nnumeric_precision:       \u1d3a\u1d41\u1d38\u1d38\nnumeric_precision_radix: \u1d3a\u1d41\u1d38\u1d38\nnumeric_scale:           \u1d3a\u1d41\u1d38\u1d38\ndatetime_precision:      \u1d3a\u1d41\u1d38\u1d38\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/operations/system-tables/columns"},"Original article")," "))}u.isMDXComponent=!0}}]);